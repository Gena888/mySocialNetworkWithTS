{"version":3,"sources":["Login/Login.module.css","Login/Login.jsx"],"names":["module","exports","LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","setErrorThunk","inStateError","className","s","loginForm","onSubmit","createField","required","Input","buttonAndRemember","loginButton","rememberMeDiv","formSummeryError","connect","state","isAuth","auth","LoginThunk","to","loginInner","formData","email","password","rememberMe","captcha","src","alt"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,iBAAmB,gCAAgC,QAAU,uBAAuB,WAAa,0BAA0B,YAAc,2BAA2B,kBAAoB,iCAAiC,cAAgB,+B,6HCsCrPC,EAAiBC,YAAU,CAC7BC,KAAM,SADaD,EA7BL,SAAC,GAAsE,IAApEE,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aACjE,OACI,uBAAMC,UAAWC,IAAEC,UAAWC,SAAUR,EAAxC,UAEKS,YAAY,CAACC,KAAW,QAASC,IAAO,QAAS,QACjDF,YAAY,CAACC,KAAW,WAAYC,IAAO,WAAY,QAEvDT,GAAcO,YAAY,CAACC,KAAW,SAAUC,IAAO,UAAW,QACnE,sBAAKN,UAAWC,IAAEM,kBAAlB,UACI,qBAAKP,UAAWC,IAAEO,YAAlB,SACI,6CAEJ,qBAAKR,UAAWC,IAAEQ,cAAlB,SACI,kCACKL,YAAY,GAAI,KAAME,IAAO,aAAc,YAC5C,uDAIXV,EAAQE,EAAcF,GAAS,KAChC,qBAAKI,UAAWD,GAAgBF,EAAaI,IAAES,iBAAmB,GAAlE,SACKX,GAAgBF,GAAc,8BAAME,YA6CtCY,uBAPS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,OACnBhB,WAAYe,EAAME,KAAKjB,WACvBE,aAAca,EAAME,KAAKf,gBAIW,CAAEgB,eAAYjB,mBAAvCa,EAhCD,SAAC,GAAqE,IAAnEI,EAAkE,EAAlEA,WAAYF,EAAsD,EAAtDA,OAAQhB,EAA8C,EAA9CA,WAAYC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,aAK5D,OAAIc,EACO,cAAC,IAAD,CAAUG,GAAI,aAIrB,sBAAKhB,UAAWC,IAAEgB,WAAlB,UACI,uCACA,cAACzB,EAAD,CACIW,SAXK,SAACe,GACdH,EAAWG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAWpEzB,WAAYA,EACZC,cAAeA,EACfC,aAAcA,IAElB,8BACKF,GAAc,qBAAKG,UAAWC,IAAEqB,QAASC,IAAK1B,EAAY2B,IAAI","file":"static/js/3.f9219747.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummeryError\":\"Login_formSummeryError__1mCgn\",\"captcha\":\"Login_captcha__3bGg_\",\"loginInner\":\"Login_loginInner__Bizq-\",\"loginButton\":\"Login_loginButton__2z3c-\",\"buttonAndRemember\":\"Login_buttonAndRemember__hcA4D\",\"rememberMeDiv\":\"Login_rememberMeDiv__3YvFP\"};","import React from 'react';\r\nimport { reduxForm, submit } from 'redux-form';\r\nimport { Input } from '../components/Common/FormsControls/FormsControls';\r\nimport { required } from './../Utils/Validators/Validaors';\r\nimport { LoginThunk, setErrorThunk } from '../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport s from './Login.module.css'\r\nimport { createField } from './../components/Common/FormsControls/FormsControls';\r\n\r\nconst LoginForm = ({ handleSubmit, error, captchaUrl, setErrorThunk, inStateError }) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={handleSubmit}>\r\n            {/* createField = (validate, placeholder, component, name, type) */}\r\n            {createField([required], 'Email', Input, 'email', 'text')}\r\n            {createField([required], 'Password', Input, 'password', 'text')}\r\n\r\n            {captchaUrl && createField([required], 'Captha', Input, 'captcha', 'text')}\r\n            <div className={s.buttonAndRemember}>\r\n                <div className={s.loginButton}>\r\n                    <button>LOGIN</button>\r\n                </div>\r\n                <div className={s.rememberMeDiv}>\r\n                    <label >\r\n                        {createField([], null, Input, 'rememberMe', 'checkbox')}\r\n                        <span>remember me</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            {error ? setErrorThunk(error) : null}\r\n            <div className={inStateError || captchaUrl ? s.formSummeryError : ''}>\r\n                {inStateError || captchaUrl && <div>{inStateError}</div>}\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\n\r\nconst Login = ({ LoginThunk, isAuth, captchaUrl, setErrorThunk, inStateError }) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        LoginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginInner}>\r\n            <h1>login</h1>\r\n            <LoginReduxForm\r\n                onSubmit={onSubmit}\r\n                captchaUrl={captchaUrl}\r\n                setErrorThunk={setErrorThunk}\r\n                inStateError={inStateError}\r\n            />\r\n            <div>\r\n                {captchaUrl && <img className={s.captcha} src={captchaUrl} alt=\"captchaImg\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl,\r\n    inStateError: state.auth.inStateError\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoginThunk, setErrorThunk })(Login);"],"sourceRoot":""}
[{"D:\\WEB\\GitHub\\my_social_network\\src\\index.js":"1","D:\\WEB\\GitHub\\my_social_network\\src\\App.js":"2","D:\\WEB\\GitHub\\my_social_network\\src\\reportWebVitals.js":"3","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\redux-store.js":"4","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\profile-reducer.js":"5","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\dialogs-reducer.js":"6","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\users-reducer.js":"7","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\nav-reducer.js":"8","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\auth-reducer.js":"9","D:\\WEB\\GitHub\\my_social_network\\src\\Login\\Login.jsx":"10","D:\\WEB\\GitHub\\my_social_network\\src\\components\\News\\News.jsx":"11","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogsContainer.jsx":"12","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Settings\\Settings.jsx":"13","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\UsersContainer.jsx":"14","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\NavContainer.jsx":"15","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileContainer.jsx":"16","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\HeaderContainer.jsx":"17","D:\\WEB\\GitHub\\my_social_network\\src\\api\\api.js":"18","D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withAuthRedirect.js":"19","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Dialogs.jsx":"20","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\Users.jsx":"21","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Nav.jsx":"22","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\Header.jsx":"23","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\Profile.jsx":"24","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Preloader\\Preloader.jsx":"25","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Message\\Message.jsx":"26","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"27","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Friends\\NavFriends.jsx":"28","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"29","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"30","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"31","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"32","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"33","D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\Validators\\Validaors.js":"34","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\FormsControls\\FormsControls.jsx":"35","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\app-reducer.js":"36","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\selectors\\user-selectors.js":"37","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"38","D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\objects-helpers.js":"39","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Paginator\\Paginator.jsx":"40","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\User\\User.jsx":"41","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\UserPhoto\\UserPhoto.jsx":"42","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\store.js":"43","D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withSuspense.js":"44","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"45","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileData.jsx":"46","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\app-reducer.ts":"47","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\auth-reducer.ts":"48","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\dialogs-reducer.ts":"49","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\profile-reducer.ts":"50","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\nav-reducer.ts":"51","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\users-reducer.ts":"52","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\redux-store.ts":"53","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\UsersContainer.tsx":"54","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\user-selectors.ts":"55","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\Users.tsx":"56","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Paginator\\Paginator.tsx":"57","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileContainer.tsx":"58","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\Profile.tsx":"59","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"60","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"61","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"62","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileData.tsx":"63","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\NavContainer.tsx":"64","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogsContainer.tsx":"65","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\Header.tsx":"66","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Nav.tsx":"67","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Message\\Message.tsx":"68","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Login\\Login.tsx":"69","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\HeaderContainer.tsx":"70","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\Validators\\Validaors.ts":"71","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\FormsControls\\FormsControls.tsx":"72","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\securityAPI.ts":"73","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\authAPI.ts":"74","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\profileAPI.ts":"75","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\types\\apiTypes.ts":"76","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\userAPI.ts":"77","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\api.ts":"78","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\objects-helpers.ts":"79","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\App.tsx":"80","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withSuspense.tsx":"81","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Preloader\\Preloader.tsx":"82","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Dialogs.tsx":"83","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withAuthRedirect.tsx":"84","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\User\\User.tsx":"85","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\UserPhoto\\UserPhoto.tsx":"86","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"87","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"88","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"89","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\index.tsx":"90","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Settings\\Settings.tsx":"91","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\News\\News.tsx":"92","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Friends\\NavFriends.tsx":"93","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"94","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\usersSearchForm.tsx":"95"},{"size":208,"mtime":1607487844668,"results":"96","hashOfConfig":"97"},{"size":4331,"mtime":1608321596234,"results":"98","hashOfConfig":"97"},{"size":362,"mtime":499162500000,"results":"99","hashOfConfig":"97"},{"size":1111,"mtime":1607485921767,"results":"100","hashOfConfig":"97"},{"size":5052,"mtime":1608115329496,"results":"101","hashOfConfig":"97"},{"size":1922,"mtime":1608024744083,"results":"102","hashOfConfig":"97"},{"size":3989,"mtime":1607770871552,"results":"103","hashOfConfig":"97"},{"size":603,"mtime":1608024733456,"results":"104","hashOfConfig":"97"},{"size":3074,"mtime":1608112436645,"results":"105","hashOfConfig":"97"},{"size":2769,"mtime":1608015513925,"results":"106","hashOfConfig":"97"},{"size":224,"mtime":1607943390037,"results":"107","hashOfConfig":"97"},{"size":978,"mtime":1608361918012,"results":"108","hashOfConfig":"97"},{"size":244,"mtime":1607943382156,"results":"109","hashOfConfig":"97"},{"size":2046,"mtime":1607499147056,"results":"110","hashOfConfig":"97"},{"size":384,"mtime":1607944136380,"results":"111","hashOfConfig":"97"},{"size":2308,"mtime":1607952065424,"results":"112","hashOfConfig":"97"},{"size":713,"mtime":1608114497131,"results":"113","hashOfConfig":"97"},{"size":2515,"mtime":1607772204148,"results":"114","hashOfConfig":"97"},{"size":526,"mtime":1607027932511,"results":"115","hashOfConfig":"97"},{"size":2040,"mtime":1608361902648,"results":"116","hashOfConfig":"97"},{"size":1160,"mtime":1608019726393,"results":"117","hashOfConfig":"97"},{"size":1722,"mtime":1607953500254,"results":"118","hashOfConfig":"97"},{"size":1502,"mtime":1608113639086,"results":"119","hashOfConfig":"97"},{"size":880,"mtime":1607951795780,"results":"120","hashOfConfig":"97"},{"size":377,"mtime":1608115033617,"results":"121","hashOfConfig":"97"},{"size":441,"mtime":1605470616665,"results":"122","hashOfConfig":"97"},{"size":846,"mtime":1607938511136,"results":"123","hashOfConfig":"97"},{"size":485,"mtime":1607952506852,"results":"124","hashOfConfig":"97"},{"size":718,"mtime":1608361776152,"results":"125","hashOfConfig":"97"},{"size":3247,"mtime":1608103433954,"results":"126","hashOfConfig":"97"},{"size":1486,"mtime":1608361758364,"results":"127","hashOfConfig":"97"},{"size":1381,"mtime":1607488365677,"results":"128","hashOfConfig":"97"},{"size":686,"mtime":1607943100591,"results":"129","hashOfConfig":"97"},{"size":291,"mtime":1607209962400,"results":"130","hashOfConfig":"97"},{"size":1273,"mtime":1608105960366,"results":"131","hashOfConfig":"97"},{"size":1267,"mtime":1607313497445,"results":"132","hashOfConfig":"97"},{"size":721,"mtime":1607380103393,"results":"133","hashOfConfig":"97"},{"size":1457,"mtime":1608027649111,"results":"134","hashOfConfig":"97"},{"size":293,"mtime":1607460554784,"results":"135","hashOfConfig":"97"},{"size":2132,"mtime":1608019944152,"results":"136","hashOfConfig":"97"},{"size":1569,"mtime":1608019754368,"results":"137","hashOfConfig":"97"},{"size":465,"mtime":1607646324245,"results":"138","hashOfConfig":"97"},{"size":2836,"mtime":1605978191526,"results":"139","hashOfConfig":"97"},{"size":351,"mtime":1607627768096,"results":"140","hashOfConfig":"97"},{"size":2919,"mtime":1608110679721,"results":"141","hashOfConfig":"97"},{"size":3419,"mtime":1608109938630,"results":"142","hashOfConfig":"97"},{"size":1411,"mtime":1610046493257,"results":"143","hashOfConfig":"144"},{"size":3737,"mtime":1610066691981,"results":"145","hashOfConfig":"144"},{"size":2212,"mtime":1610286899360,"results":"146","hashOfConfig":"144"},{"size":5781,"mtime":1610412197048,"results":"147","hashOfConfig":"144"},{"size":739,"mtime":1610066748079,"results":"148","hashOfConfig":"144"},{"size":5266,"mtime":1611024803482,"results":"149","hashOfConfig":"144"},{"size":1657,"mtime":1610160248986,"results":"150","hashOfConfig":"144"},{"size":3327,"mtime":1611026428485,"results":"151","hashOfConfig":"144"},{"size":948,"mtime":1611026270650,"results":"152","hashOfConfig":"144"},{"size":1777,"mtime":1611025335791,"results":"153","hashOfConfig":"144"},{"size":2352,"mtime":1608841904126,"results":"154","hashOfConfig":"144"},{"size":3558,"mtime":1610413473065,"results":"155","hashOfConfig":"144"},{"size":1282,"mtime":1610413401441,"results":"156","hashOfConfig":"144"},{"size":705,"mtime":1610412358131,"results":"157","hashOfConfig":"144"},{"size":3956,"mtime":1610412889047,"results":"158","hashOfConfig":"144"},{"size":3396,"mtime":1610408019084,"results":"159","hashOfConfig":"144"},{"size":3638,"mtime":1608924805912,"results":"160","hashOfConfig":"144"},{"size":616,"mtime":1609011293700,"results":"161","hashOfConfig":"144"},{"size":1197,"mtime":1610294207634,"results":"162","hashOfConfig":"144"},{"size":1757,"mtime":1610415001547,"results":"163","hashOfConfig":"144"},{"size":1881,"mtime":1609011486114,"results":"164","hashOfConfig":"144"},{"size":835,"mtime":1609101075243,"results":"165","hashOfConfig":"144"},{"size":3828,"mtime":1610407507285,"results":"166","hashOfConfig":"144"},{"size":1230,"mtime":1610415185861,"results":"167","hashOfConfig":"144"},{"size":415,"mtime":1609460219117,"results":"168","hashOfConfig":"144"},{"size":1961,"mtime":1610394585777,"results":"169","hashOfConfig":"144"},{"size":284,"mtime":1609889285796,"results":"170","hashOfConfig":"144"},{"size":769,"mtime":1609889286513,"results":"171","hashOfConfig":"144"},{"size":1266,"mtime":1609889287485,"results":"172","hashOfConfig":"144"},{"size":1327,"mtime":1610044998484,"results":"173","hashOfConfig":"144"},{"size":910,"mtime":1611024585203,"results":"174","hashOfConfig":"144"},{"size":256,"mtime":1609889284389,"results":"175","hashOfConfig":"144"},{"size":318,"mtime":1610070236133,"results":"176","hashOfConfig":"144"},{"size":4816,"mtime":1610409460873,"results":"177","hashOfConfig":"144"},{"size":398,"mtime":1610296481763,"results":"178","hashOfConfig":"144"},{"size":372,"mtime":1610297495384,"results":"179","hashOfConfig":"144"},{"size":2973,"mtime":1610288293054,"results":"180","hashOfConfig":"144"},{"size":974,"mtime":1610297107968,"results":"181","hashOfConfig":"144"},{"size":1813,"mtime":1610388626763,"results":"182","hashOfConfig":"144"},{"size":553,"mtime":1610297568307,"results":"183","hashOfConfig":"144"},{"size":2818,"mtime":1610413361345,"results":"184","hashOfConfig":"144"},{"size":1055,"mtime":1610415394060,"results":"185","hashOfConfig":"144"},{"size":1607,"mtime":1610413106479,"results":"186","hashOfConfig":"144"},{"size":209,"mtime":1610502127652,"results":"187","hashOfConfig":"144"},{"size":239,"mtime":1610501237947,"results":"188","hashOfConfig":"144"},{"size":219,"mtime":1610501206914,"results":"189","hashOfConfig":"144"},{"size":568,"mtime":1610501201059,"results":"190","hashOfConfig":"144"},{"size":969,"mtime":1610501355269,"results":"191","hashOfConfig":"144"},{"size":1151,"mtime":1611026008419,"results":"192","hashOfConfig":"144"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f4lb3m",{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},"cse3ot",{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"289"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"289"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"289"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"289"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"289"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"289"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"289"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"289"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"289"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"289"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"289"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"289"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"289"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"289"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"289"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"289"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"289"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WEB\\GitHub\\my_social_network\\src\\index.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\App.js",["403","404","405"],"D:\\WEB\\GitHub\\my_social_network\\src\\reportWebVitals.js",[],["406","407"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\redux-store.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\profile-reducer.js",["408"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\dialogs-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\users-reducer.js",["409"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\nav-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\auth-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Login\\Login.jsx",["410","411","412"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\News\\News.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Settings\\Settings.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\UsersContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\NavContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileContainer.jsx",["413","414"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\HeaderContainer.jsx",["415","416"],"D:\\WEB\\GitHub\\my_social_network\\src\\api\\api.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withAuthRedirect.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Dialogs.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\Users.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Nav.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\Header.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\Profile.jsx",["417"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Preloader\\Preloader.jsx",["418"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["419"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Friends\\NavFriends.jsx",["420"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["421"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",[],["422","423"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\Validators\\Validaors.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\FormsControls\\FormsControls.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\app-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\selectors\\user-selectors.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\objects-helpers.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Paginator\\Paginator.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\User\\User.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\UserPhoto\\UserPhoto.jsx",["424"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\store.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withSuspense.js",["425"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileData.jsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\app-reducer.ts",[],["426","427"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\auth-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\dialogs-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\profile-reducer.ts",["428"],"import { stopSubmit, FormAction } from 'redux-form';\nimport { PhotosType, postDataType, ProfileType } from '../types/types';\nimport { profileAPI } from './../api/profileAPI';\nimport { BaseThunkType, InferActionTypes } from './redux-store';\n\nexport type InitialStateType = typeof initialState\nexport type ActionTypes = InferActionTypes<typeof profileReducerActions>\ntype ThunkType = BaseThunkType<ActionTypes | FormAction>\n\nlet initialState = {\n    postsData: [\n        { id: 1, likes: 121, message: 'Hallow it\\'s my first post. ' },\n        { id: 2, likes: 231, message: 'Here should be second post but i\\'v got no idea.' },\n        { id: 3, likes: 321, message: 'For third post i\\'v still have no idea. I guess twitter in not for me.' }\n    ] as Array<postDataType>,\n    profile: null as ProfileType | null,\n    status: ' ' as string,\n    isValidInput: false as boolean,\n    isAuth: false as boolean\n};\n\nconst profileReducer = (state = initialState, action: ActionTypes): InitialStateType => {\n    switch (action.type) {\n\n        case 'ADD_POST':\n            let newPost = {\n                id: 5,\n                message: action.newTextBody,\n                likes: 0\n            };\n            return {\n                ...state,\n                postsData: [...state.postsData, newPost],\n            };\n        case 'SET_USER_PROFILE':\n            return {\n                ...state,\n                profile: action.profile\n            };\n\n        case 'SET_STATUS':\n            return {\n                ...state,\n                status: action.status\n            }\n        case 'DELETE_POST':\n            return {\n                ...state,\n                postsData: state.postsData.filter(p => p.id != action.postId)\n            }\n        case 'SAVE_PHOTO_SUCCESS':\n            return {\n                ...state,\n                profile: {\n                    ...state.profile,\n                    photos: action.photos\n                } as ProfileType\n                // временное решение\n            }\n        case 'SET_IS_VALID_INPUT':\n            return {\n                ...state,\n                isValidInput: action.isValid\n            }\n\n\n        default:\n            return state;\n\n    };\n\n};\n// action creators\n\n\n\nexport const profileReducerActions = {\n    deletePostAC: (postId: number) => ({ type: 'DELETE_POST', postId } as const),\n    addNewPostAC: (newTextBody: string) => ({ type: 'ADD_POST', newTextBody } as const),\n    setUserProfile: (profile: ProfileType | null) => ({ type: 'SET_USER_PROFILE', profile } as const),\n    setStatus: (status: string) => ({ type: 'SET_STATUS', status } as const),\n    savaPhotoSuccess: (photos: PhotosType) => ({ type: 'SAVE_PHOTO_SUCCESS', photos } as const),\n    setIsValidInput: (isValid: boolean) => ({ type: 'SET_IS_VALID_INPUT', isValid } as const)\n}\n/// thunks\n\n\nexport const getProfileDataThunk = (userId: number | null): ThunkType => async (dispatch) => {\n    if (userId !== null) {\n        let data = await profileAPI.getProfileData(userId)\n        dispatch(profileReducerActions.setUserProfile(data));\n    }\n}\n\nexport const getStatusThunk = (userId: number | null): ThunkType => async (dispatch) => {\n    if (userId !== null) {\n        let data = await profileAPI.getStatus(userId)\n        dispatch(profileReducerActions.setStatus(data));\n    }\n}\n//по окончанию асинхронной операции мы пытаемся выполнить try, если пришла ошибка -\n// - мы перехватываем её catch и что то с ней делаем, в ней есть message. код шибки(500/404 и тд.)\n// это локальный обработчик ошибок в противовес глоаблному в app.js\nexport const updateStatusThunk = (status: string): ThunkType => async (dispatch) => {\n    try {\n        let data = await profileAPI.updateStatus(status)\n        if (data.resultCode === 0) {\n            dispatch(profileReducerActions.setStatus(status));\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const savePhotoThunk = (file: File): ThunkType => async (dispatch) => {\n    let data = await profileAPI.putNewPhoto(file)\n    if (data.resultCode === 0) {\n        dispatch(profileReducerActions.savaPhotoSuccess(data.data.photos));\n    }\n}\n\nexport const saveProfileThunk = (profile: ProfileType | null): ThunkType => async (dispatch, getState) => {\n    if (profile !== null) {\n        let userId = getState().auth.userId\n        let data = await profileAPI.saveProfile(profile)\n        if (data.resultCode === 0) {\n            if (userId !== null) {\n                dispatch(getProfileDataThunk(userId))\n            } else {\n                throw new Error('userId cant be null')\n            }\n            dispatch(profileReducerActions.setIsValidInput(true))\n        } else {\n            dispatch(profileReducerActions.setIsValidInput(false))\n            let wrongNetwork = data.messages[0].slice(\n                data.messages[0].indexOf(\">\") + 1,\n                data.messages[0].indexOf(\")\")\n            )\n                .toLocaleLowerCase();\n            dispatch(\n                stopSubmit(\"edit-profile\", {\n                    contacts: { [wrongNetwork]: data.messages[0] }\n                })\n            );\n            return Promise.reject(data.messages[0]);\n\n            // как сделать чтобы все сообщения сразу подсветились? \n        }\n    }\n}\n\n\n\nexport default profileReducer;\n\n// let key = data.messages[0].match(/Contacts->(\\w+)/)[1].toLowerCase();\n// dispatch(stopSubmit('edit-profile', {\n//     contacts: { [key]: data.messages[0] },\n// })); тоже самое что и выше в else только с регулярным выражением. ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\nav-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\users-reducer.ts",["429"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\redux-store.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\user-selectors.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\Users.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Paginator\\Paginator.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileContainer.tsx",["430","431"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { profileReducerActions, getProfileDataThunk, updateStatusThunk, getStatusThunk, savePhotoThunk, saveProfileThunk } from '../../redux/profile-reducer';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { ProfileType } from '../../types/types';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype MapDispatchPropsType = {\r\n    getStatusThunk: (userId: number | null) => void\r\n    getProfileDataThunk: (userId: number | null) => void\r\n    updateStatusThunk: (status: string) => void\r\n    saveProfileThunk: (profile: ProfileType | null) => void\r\n    savePhotoThunk: (file: File) => void\r\n    setUserProfile: (profile: ProfileType | null) => void\r\n    setIsValidInput: (isValid: boolean) => void\r\n}\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype RoutePropsType = RouteComponentProps<PathParamsType>\r\ntype PropsType = RoutePropsType & MapStatePropsType & MapDispatchPropsType\r\n\r\n// + преобразование \r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorisedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/Login')\r\n                // push history в любом месте кода берёт и меняет URL. условной альтернативой может быть redirect\r\n            }\r\n        } \r\n        this.props.getProfileDataThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n    // .match пришёл в пропсы из HOC withRouter. это инфа связанная и URL\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile\r\n                    {...this.props}\r\n                    setIsValidInput={this.props.setIsValidInput}\r\n                    savePhotoThunk={this.props.savePhotoThunk}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    isValidInput={this.props.isValidInput}\r\n                    updateStatusThunk={this.props.updateStatusThunk} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    isValidInput: state.profilePage.isValidInput\r\n})\r\n\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, RoutePropsType, AppStateType>\r\n        (mapStateToProps,\r\n            {\r\n                setUserProfile: profileReducerActions.setUserProfile, getProfileDataThunk,\r\n                saveProfileThunk, updateStatusThunk, getStatusThunk, savePhotoThunk,\r\n                setIsValidInput: profileReducerActions.setIsValidInput\r\n            }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\Profile.tsx",["432"],"import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport { ProfileType } from '../../types/types';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\n\r\ntype PropsType = {\r\n    status: string\r\n    profile: ProfileType | null\r\n    isOwner: boolean\r\n    isValidInput: boolean\r\n\r\n    setIsValidInput: (isValid: boolean) => void\r\n    updateStatusThunk: (status: string) => void\r\n    savePhotoThunk: (file: any) => void\r\n    saveProfileThunk: (profile: ProfileType | null) => void\r\n}\r\n\r\n\r\n\r\nconst Profile: React.FC<PropsType> = ({\r\n    status, updateStatusThunk, profile,\r\n    isOwner, savePhotoThunk, saveProfileThunk, isValidInput, setIsValidInput }) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                setIsValidInput={setIsValidInput}\r\n                saveProfileThunk={saveProfileThunk}\r\n                savePhotoThunk={savePhotoThunk}\r\n                isOwner={isOwner}\r\n                profile={profile}\r\n                status={status}\r\n                updateStatusThunk={updateStatusThunk}\r\n                isValidInput={isValidInput}\r\n            />\r\n            {isOwner && <MyPostsContainer profile={profile} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["433","434"],"import { connect } from 'react-redux';\r\nimport { profileReducerActions } from '../../../redux/profile-reducer';\r\nimport MyPosts, { MapDispatchPostsType, MapPropsType } from './MyPosts';\r\nimport { reset } from 'redux-form';\r\nimport { postDataType, ProfileType } from '../../../types/types';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapPropsType, MapDispatchPostsType, {}, AppStateType>(mapStateToProps, {\r\n    addPost: profileReducerActions.addNewPostAC, resetForm: reset\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer; ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["435"],"import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { isUserImgLarge } from '../../Common/UserPhoto/UserPhoto';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ProfileData from './ProfileData'\r\nimport { ProfileType } from '../../../types/types';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    isOwner: boolean\r\n    isValidInput: boolean\r\n\r\n    setIsValidInput: (isValid: boolean) => void\r\n    saveProfileThunk: (formData: ProfileType) => void\r\n    savePhotoThunk: (file: File) => void\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({\r\n    profile, updateStatusThunk, status, isOwner,\r\n    savePhotoThunk, saveProfileThunk, isValidInput, setIsValidInput }) => {\r\n\r\n    useEffect(() => {\r\n        isValidInput && setEditMode(false);\r\n        setIsValidInput(false)\r\n    })\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    // e.target.files?.length - если files не null то берём длинну и выполняем тело. (вопросительный знак!!!)\r\n    // такая же запись по старому if (e.target.files && e.target.files.length)\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            savePhotoThunk(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        saveProfileThunk(formData);\r\n        // isValidInput && setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.imageBlock} >\r\n                    {/* img */}\r\n                    <div className={s.innetImageBlock}>\r\n                        <img className={s.userPhoto}\r\n                            src={isUserImgLarge(profile)} alt=\"profilePhoto\" />\r\n                        <div className={s.onImgButtons}>\r\n                            <div className={s.changePhotoBtn}>\r\n                                {/* changePhoto button */}\r\n                                {isOwner && <input id='upload' type={'file'} title=' ' onChange={onMainPhotoSelected} />}\r\n                                <label htmlFor='upload'>Change photo</label>\r\n                            </div>\r\n                            <div>\r\n                                {/* eddit button */}\r\n                                {isOwner &&\r\n                                    <div className={s.editButton}>\r\n                                        <button onClick={() => { setEditMode(true) }}>Edit info</button>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={s.infoBlock}>\r\n                    {/* status */}\r\n                    <div>\r\n                        <ProfileStatusWithHooks\r\n                            status={status}\r\n                            updateStatusThunk={updateStatusThunk} />\r\n                    </div>\r\n                    <div>\r\n                        {editMode\r\n                            ? <ProfileDataForm\r\n                                profile={profile}\r\n                                initialValues={profile}\r\n                                onSubmit={onSubmit}\r\n                            />\r\n                            : <ProfileData\r\n                                profile={profile}\r\n                            // isOwner={isOwner}\r\n                            />}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileData.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\NavContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\Header.tsx",["436"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport no_ava from '../../imagas/no-avatar.png';\r\nimport logo from './../../svg/Henadzi.png';\r\nimport { PhotosType } from '../../types/types';\r\n\r\ntype PropsType = {\r\n    login: string | null\r\n    isAuth: boolean\r\n    profilePhotos: PhotosType | undefined\r\n    userId: number | null\r\n\r\n    LogoutThunk: () => void\r\n}\r\n\r\nconst Header: React.FC<PropsType> = ({ login, isAuth, LogoutThunk, profilePhotos, userId }) => {\r\n\r\n    let srcOfImg = '';\r\n    if (profilePhotos != null) {\r\n\r\n        if (isAuth && profilePhotos.small != null) {\r\n            srcOfImg = profilePhotos.small;\r\n        } else {\r\n            srcOfImg = no_ava;\r\n        }\r\n    }\r\n    // const onLogoutClick = () => {\r\n\r\n    // }\r\n    return (\r\n        <header className={s.header}>\r\n            <div className={s.innerHeader}>\r\n                <img src={logo} alt=\"\" />\r\n                <div className={s.loginBlock} >\r\n                    {/* {profilePhotos\r\n                        ? <NavLink to={'/Profile/' + userId}>\r\n                            <img src={srcOfImg} alt=\"small-avatar\" />\r\n                        </NavLink>\r\n                        : <div></div>\r\n                    } */}\r\n                    <div className={s.loginBlock}>\r\n                        {isAuth\r\n                            ? <div> <span className={s.loginEmail}>{login}</span>\r\n                                <button onClick={LogoutThunk}>Logout</button></div>\r\n                            : <NavLink to={'/Login'} >Login</NavLink>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </header >\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Nav.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Login\\Login.tsx",["437","438","439"],"import React from 'react';\r\nimport { InjectedFormProps, reduxForm, submit } from 'redux-form';\r\nimport { Input } from '../components/Common/FormsControls/FormsControls';\r\nimport { required } from '../Utils/Validators/Validaors';\r\nimport { LoginThunk, setErrorThunk } from '../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport s from './Login.module.css'\r\nimport { createField } from '../components/Common/FormsControls/FormsControls';\r\nimport { AppStateType } from '../redux/redux-store';\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n    setErrorThunk: (error: string | null) => void\r\n    inStateError: string | null\r\n}\r\n\r\nexport type LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = ({ handleSubmit, error, captchaUrl, setErrorThunk, inStateError }) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={handleSubmit}>\r\n            {/* createField = (validate, placeholder, component, name, type) */}\r\n            {createField<LoginFormValuesTypeKeys>([required], 'Email', Input, 'email', 'text')}\r\n            {createField<LoginFormValuesTypeKeys>([required], 'Password', Input, 'password', 'text')}\r\n\r\n            {captchaUrl && createField<LoginFormValuesTypeKeys>([required], 'Captha', Input, 'captcha', 'text')}\r\n            <div className={s.buttonAndRemember}>\r\n                <div className={s.loginButton}>\r\n                    <button>LOGIN</button>\r\n                </div>\r\n                <div className={s.rememberMeDiv}>\r\n                    <label >\r\n                        {createField<LoginFormValuesTypeKeys>([], undefined, Input, 'rememberMe', 'checkbox')}\r\n                        <span>remember me</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            {error ? setErrorThunk(error) : null}\r\n            <div className={inStateError || captchaUrl ? s.formSummeryError : ''}>\r\n                {inStateError || captchaUrl && <div>{inStateError}</div>}\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n    inStateError: string | null\r\n}\r\n\r\ntype MapDispatcPropsType = {\r\n    LoginThunk: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n    setErrorThunk: (error: string | null) => void\r\n}\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatcPropsType> = ({ LoginThunk, isAuth, captchaUrl, setErrorThunk, inStateError }) => {\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        LoginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginInner}>\r\n            <h1>login</h1>\r\n            <LoginReduxForm\r\n                onSubmit={onSubmit}\r\n                captchaUrl={captchaUrl}\r\n                setErrorThunk={setErrorThunk}\r\n                inStateError={inStateError}\r\n            />\r\n            <div>\r\n                {captchaUrl && <img className={s.captcha} src={captchaUrl} alt=\"captchaImg\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl,\r\n    inStateError: state.auth.inStateError\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoginThunk, setErrorThunk })(Login);","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\HeaderContainer.tsx",["440"],"import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { LogoutThunk } from '../../redux/auth-reducer';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { PhotosType } from '../../types/types';\r\n\r\ntype MapStateType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    profilePhotos: PhotosType | undefined\r\n    userId: number | null\r\n}\r\n\r\ntype MapDispatchType = {\r\n    LogoutThunk: () => void\r\n}\r\n\r\ntype OwnPropsType = {}\r\n\r\ntype PropsType = MapStateType & MapDispatchType & OwnPropsType\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateType => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n    profilePhotos: state.profilePage.profile?.photos, \r\n    userId: state.auth.userId\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect<MapStateType, MapDispatchType, OwnPropsType, AppStateType>\r\n        (mapStateToProps, { LogoutThunk }),\r\n    // withAuthRedirect\r\n)(HeaderContainer)\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\Validators\\Validaors.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\FormsControls\\FormsControls.tsx",["441"],"import React, { FC } from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form'\r\nimport { FieldValidatorType } from '../../../Utils/Validators/Validaors'\r\n\r\n// из прорсов удалил input, \r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(\r\n    validate: Array<FieldValidatorType>,\r\n    placeholder: string | undefined,\r\n    component: React.FC<WrappedFieldProps> | \"input\" | \"select\" | \"textarea\" | undefined,\r\n    name: FormKeysType,\r\n    type: string,\r\n    rows?: string\r\n) {\r\n    return (\r\n        <div>\r\n            <Field\r\n                validate={validate}\r\n                placeholder={placeholder}\r\n                component={component}\r\n                name={name}\r\n                type={type}\r\n                rows={rows}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <div className={s.formErrorDiv}>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n\r\n    // const { input, meta, child, ...restProps } = props\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}><textarea className={s.textarea} {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n\r\n    // const { input, meta, child, ...restProps } = props\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}><input className={s.input} {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\securityAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\authAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\profileAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\types\\apiTypes.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\userAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\api.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\objects-helpers.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\App.tsx",["442"],"import React, { Component } from 'react';\nimport './App.css';\nimport Settings from './components/Settings/Settings';\nimport { Route, withRouter, BrowserRouter, Redirect, Switch, HashRouter } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport NavContainer from './components/Nav/NavContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { connect, Provider } from 'react-redux';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport store, { AppStateType } from './redux/redux-store';\nimport { withSuspense } from './Hoc/withSuspense';\n\nconst News = React.lazy(() => import('./components/News/News'))\nconst Login = React.lazy(() => import('./Login/Login'))\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n  initializeApp: () => void\n}\n\nconst SuspendedProfile = withSuspense(ProfileContainer) \nconst SuspendedDialogs = withSuspense(DialogsContainer)\n\nclass App extends Component<MapPropsType & DispatchPropsType> {\n  //тут мы можем задиспатчить санку на отображение глобальной ошибки.\n  catchAllUnhandledError = (e: PromiseRejectionEvent) => {\n    console.log('some error.');\n  }\n  //метод жизненного цикла, который выполнится после вмонтирования компоненты \n  // window.addEventListener - садй эффект но в comp.DidMount допустим. \n  // это глобальный обработчик ошибок в противовес локальному в редюссоре\n  // если в редюсоре перехвачена ошибка - тут её не будет.\n  componentDidMount() {\n    this.props.initializeApp()\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledError);\n  }\n  // подчистил мусор. при умирании компоненты нужно отписать слушателя.\n  componentWillUnmount() {\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledError);\n  }\n\n  render() {\n    //пока не инициализированы(все данные в редюсор не пришли) - прелоадер. \n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    //exact для отображения точный совпадений url. если /login/???? то не отобразит. \n    // swtich from react-render-dom. идёт по списку роутов до момента совпадения url. схоже с exact\n    return (\n      <div className=\"app-wrapper\">\n\n        <HeaderContainer />\n        <NavContainer />\n        <div className='app-wrapper-content'>\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to={'/Profile'} />} />\n            <Route path='/Profile/:userId?' render={() => <SuspendedProfile/>} />\n            <Route path='/Dialogs/:userId?' render={() => <SuspendedDialogs/>} />\n            {/* <Route path='/Profile/:userId?' render={() => <ProfileContainer />} />\n            <Route path='/Dialogs/:userId?' render={() => <DialogsContainer />} /> */}\n            <Route path='/Users' render={() => <UsersContainer />} />\n            <Route path='/News' render={withSuspense(News)} />\n            <Route path='/Settings' render={() => <Settings />} />\n            <Route path='/Login' render={() => { return <React.Suspense fallback={<Preloader />}> <Login /> </React.Suspense> }} />\n            <Route exact path='*' render={() => <div>404 not found</div>} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized\n})\n\n// AppContainer результат функции compose.\n// compose один за одним выполняет хоки. \n// connect передаёт данные в компаненту через MSTP и MDTP\n// brouser router передаёт информацию о роутинге, url\n// provider передаёт store в контекст всех дочерних компанент \n// в контект уместо положить тема(тёмная,светлая), локализация(en/ru)\nlet AppContainer = compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJsApp: React.FC = () => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  )\n}\n\n\nexport default SamuraiJsApp; ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withSuspense.tsx",["443"],"import React, { Suspense } from 'react';\r\nimport Preloader from '../components/Common/Preloader/Preloader';\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader />}>\r\n                <WrappedComponent {...props} />\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Preloader\\Preloader.tsx",["444"],"import preloader from '../../../svg/Eclipse-1s-200px.svg';\r\nimport React from 'react';\r\nimport s from './Preloader.module.css';\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.ldsEllipsis}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Dialogs.tsx",["445","446"],"import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm, InjectedFormProps } from 'redux-form';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../Utils/Validators/Validaors';\r\nimport { DialogsInilialStateType } from './../../redux/dialogs-reducer'\r\nimport { dialogsDataType, messagesDataType } from '../../types/types';\r\nimport { createField } from './../Common/FormsControls/FormsControls';\r\n\r\ntype PropsType = {\r\n    // dialogsPage: DialogsInilialStateType\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n    sendMessage: (newMessageBody: string) => void\r\n    resetForm: (formName: string) => void\r\n    match: {\r\n        params: {\r\n            userId: number\r\n        }\r\n    }\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    let addNewMessage = (values: NewMessageFormType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n        props.resetForm('dialogAddMessageForm')\r\n    };\r\n\r\n    let dialogsElements =\r\n        props.dialogsData.map((dialogEl) =>\r\n            <DialogItem paramsUserId={props.match.params.userId} key={dialogEl.id} name={dialogEl.name} id={dialogEl.id} imgSrc={dialogEl.imgSrc} />)\r\n    let messagesElements =\r\n        props.messagesData.map((messageEl) =>\r\n            <Message key={messageEl.id} message={messageEl.message} addresserYou={messageEl.addresserYou} />)\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.message}>\r\n                    {messagesElements}\r\n                </div>\r\n                <div className={s.messageInput}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nexport type NewMessageFormType = {\r\n    newMessageBody: string\r\n}\r\n\r\ntype NewMessageFormTypeKeys = Extract<keyof NewMessageFormType, string>\r\ntype AddMessageFormOwnPropsType = {}\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormType, AddMessageFormOwnPropsType> & AddMessageFormOwnPropsType>  = (props) => {\r\n    return (\r\n        <form  className={s.dialogsForm} onSubmit={props.handleSubmit}>\r\n          \r\n            {createField<NewMessageFormTypeKeys>([required, maxLength50], 'Enter your message', Textarea, 'newMessageBody', 'text', '1')}\r\n            <div className={s.dialogsButton}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<NewMessageFormType, AddMessageFormOwnPropsType>({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withAuthRedirect.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\User\\User.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\UserPhoto\\UserPhoto.tsx",["447"],"import React from 'react';\r\nimport noUserPhoto from '../../../imagas/no-avatar.png'\r\nimport { ProfileType, UsersType } from '../../../types/types';\r\n\r\nexport const isUserImgSmall = (user: UsersType) => {\r\n    return user.photos.small !== null\r\n        ? user.photos.small\r\n        : noUserPhoto\r\n\r\n}\r\n\r\nexport const isUserImgLarge = (profile: ProfileType) => {\r\n    return profile.photos.large !== null\r\n        ? profile.photos.large\r\n        : profile.photos.small !== null\r\n            ? profile.photos.small\r\n            : noUserPhoto\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["448"],"import React from 'react';\r\nimport { postDataType, ProfileType } from '../../../../types/types';\r\nimport s from './Post.module.css';\r\n\r\ntype PostType = {\r\n    profile: ProfileType | null\r\n    likes: number\r\n    message: string\r\n}\r\n\r\n\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n    if (!props.profile) {\r\n    } else {\r\n        var imgSrc = props.profile.photos.large\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <div className={s.postInfo}>\r\n                <div>\r\n                    {/* <img className={s.itemImg} src={props.profile && props.profile.photos.large} alt=\"\" /> */}\r\n                    <img className={s.itemImg} src={imgSrc} alt=\"\" />\r\n                </div>\r\n                <div className={s.likes}>\r\n                    <span>{props.likes} likes</span>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.textInfo}>\r\n                <div>\r\n                    {props.message}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\index.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Settings\\Settings.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\News\\News.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Friends\\NavFriends.tsx",["449"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './NavFriends.module.css';\r\n\r\ntype PropsType = {\r\n    name: string\r\n    imgSrc: string\r\n}\r\n\r\nconst NavFriends:React.FC<PropsType> = (props) => {\r\n    return (\r\n\r\n\r\n        <div className={s.navFriendsElement}>\r\n            <div className={s.navFriendsElementImageDiv}>\r\n                <img src={props.imgSrc} alt=\"avatar\" />\r\n            </div>\r\n            <div className={s.navFriendsElementName}>{props.name}</div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default NavFriends;\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["450"],"import React from 'react';\r\nimport s from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    paramsUserId: number\r\n    imgSrc: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem:React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n\r\n            <NavLink to={\"/Dialogs/\" + props.id}>\r\n                <div className=\r\n                    {props.paramsUserId == props.id ? s.active : s.noActive + ' ' + s.avaImg} >\r\n                    <img src={props.imgSrc} alt=\"avatar\" />\r\n                </div>\r\n                <div className={s.name}>\r\n                    {props.name}\r\n                </div>\r\n            </NavLink>\r\n\r\n            {/* jsx элемент принимает данные для отрисовки из props, которые туда попали из массива данных через .map */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\usersSearchForm.tsx",[],{"ruleId":"451","severity":1,"message":"452","line":1,"column":28,"nodeType":"453","messageId":"454","endLine":1,"endColumn":32},{"ruleId":"451","severity":1,"message":"455","line":1,"column":34,"nodeType":"453","messageId":"454","endLine":1,"endColumn":42},{"ruleId":"451","severity":1,"message":"456","line":4,"column":29,"nodeType":"453","messageId":"454","endLine":4,"endColumn":42},{"ruleId":"457","replacedBy":"458"},{"ruleId":"459","replacedBy":"460"},{"ruleId":"461","severity":1,"message":"462","line":52,"column":61,"nodeType":"463","messageId":"464","endLine":52,"endColumn":63},{"ruleId":"461","severity":1,"message":"462","line":72,"column":65,"nodeType":"463","messageId":"464","endLine":72,"endColumn":67},{"ruleId":"451","severity":1,"message":"465","line":2,"column":21,"nodeType":"453","messageId":"454","endLine":2,"endColumn":27},{"ruleId":"466","severity":1,"message":"467","line":32,"column":31,"nodeType":"468","messageId":"469","endLine":32,"endColumn":33},{"ruleId":"466","severity":1,"message":"467","line":32,"column":45,"nodeType":"468","messageId":"469","endLine":32,"endColumn":47},{"ruleId":"451","severity":1,"message":"470","line":6,"column":10,"nodeType":"453","messageId":"454","endLine":6,"endColumn":26},{"ruleId":"461","severity":1,"message":"462","line":30,"column":44,"nodeType":"463","messageId":"464","endLine":30,"endColumn":46},{"ruleId":"451","severity":1,"message":"470","line":5,"column":10,"nodeType":"453","messageId":"454","endLine":5,"endColumn":26},{"ruleId":"451","severity":1,"message":"471","line":7,"column":10,"nodeType":"453","messageId":"454","endLine":7,"endColumn":18},{"ruleId":"451","severity":1,"message":"472","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":9},{"ruleId":"451","severity":1,"message":"473","line":1,"column":8,"nodeType":"453","messageId":"454","endLine":1,"endColumn":17},{"ruleId":"461","severity":1,"message":"474","line":12,"column":41,"nodeType":"463","messageId":"464","endLine":12,"endColumn":43},{"ruleId":"451","severity":1,"message":"475","line":2,"column":10,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"476","severity":1,"message":"477","line":13,"column":5,"nodeType":"453","endLine":13,"endColumn":14,"suggestions":"478"},{"ruleId":"457","replacedBy":"479"},{"ruleId":"459","replacedBy":"480"},{"ruleId":"451","severity":1,"message":"481","line":1,"column":8,"nodeType":"453","messageId":"454","endLine":1,"endColumn":13},{"ruleId":"451","severity":1,"message":"455","line":1,"column":17,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"457","replacedBy":"482"},{"ruleId":"459","replacedBy":"483"},{"ruleId":"461","severity":1,"message":"462","line":49,"column":61,"nodeType":"463","messageId":"464","endLine":49,"endColumn":63},{"ruleId":"461","severity":1,"message":"462","line":68,"column":65,"nodeType":"463","messageId":"464","endLine":68,"endColumn":67},{"ruleId":"484","severity":1,"message":"470","line":6,"column":10,"nodeType":"453","messageId":"454","endLine":6,"endColumn":26},{"ruleId":"461","severity":1,"message":"462","line":48,"column":44,"nodeType":"463","messageId":"464","endLine":48,"endColumn":46},{"ruleId":"484","severity":1,"message":"472","line":2,"column":8,"nodeType":"453","messageId":"454","endLine":2,"endColumn":9},{"ruleId":"484","severity":1,"message":"485","line":5,"column":10,"nodeType":"453","messageId":"454","endLine":5,"endColumn":22},{"ruleId":"484","severity":1,"message":"486","line":5,"column":24,"nodeType":"453","messageId":"454","endLine":5,"endColumn":35},{"ruleId":"476","severity":1,"message":"477","line":26,"column":5,"nodeType":"453","endLine":26,"endColumn":14,"suggestions":"487"},{"ruleId":"484","severity":1,"message":"488","line":25,"column":13,"nodeType":"453","messageId":"454","endLine":25,"endColumn":21},{"ruleId":"484","severity":1,"message":"465","line":2,"column":40,"nodeType":"453","messageId":"454","endLine":2,"endColumn":46},{"ruleId":"466","severity":1,"message":"467","line":48,"column":31,"nodeType":"468","messageId":"469","endLine":48,"endColumn":33},{"ruleId":"466","severity":1,"message":"467","line":48,"column":45,"nodeType":"468","messageId":"469","endLine":48,"endColumn":47},{"ruleId":"484","severity":1,"message":"470","line":5,"column":10,"nodeType":"453","messageId":"454","endLine":5,"endColumn":26},{"ruleId":"484","severity":1,"message":"489","line":1,"column":17,"nodeType":"453","messageId":"454","endLine":1,"endColumn":19},{"ruleId":"484","severity":1,"message":"456","line":4,"column":29,"nodeType":"453","messageId":"454","endLine":4,"endColumn":42},{"ruleId":"484","severity":1,"message":"455","line":1,"column":17,"nodeType":"453","messageId":"454","endLine":1,"endColumn":25},{"ruleId":"484","severity":1,"message":"473","line":1,"column":8,"nodeType":"453","messageId":"454","endLine":1,"endColumn":17},{"ruleId":"484","severity":1,"message":"490","line":5,"column":10,"nodeType":"453","messageId":"454","endLine":5,"endColumn":15},{"ruleId":"484","severity":1,"message":"491","line":8,"column":10,"nodeType":"453","messageId":"454","endLine":8,"endColumn":33},{"ruleId":"484","severity":1,"message":"481","line":1,"column":8,"nodeType":"453","messageId":"454","endLine":1,"endColumn":13},{"ruleId":"484","severity":1,"message":"485","line":2,"column":10,"nodeType":"453","messageId":"454","endLine":2,"endColumn":22},{"ruleId":"484","severity":1,"message":"475","line":2,"column":10,"nodeType":"453","messageId":"454","endLine":2,"endColumn":17},{"ruleId":"461","severity":1,"message":"474","line":18,"column":41,"nodeType":"463","messageId":"464","endLine":18,"endColumn":43},"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'BrowserRouter' is defined but never used.","no-native-reassign",["492"],"no-negated-in-lhs",["493"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'submit' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'withAuthRedirect' is defined but never used.","'Redirect' is defined but never used.","'s' is defined but never used.","'preloader' is defined but never used.","Expected '===' and instead saw '=='.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setEditMode'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isValidInput, setIsValidInput] as a second argument to the useEffect Hook.",["494"],["492"],["493"],"'React' is defined but never used.",["492"],["493"],"@typescript-eslint/no-unused-vars","'postDataType' is defined but never used.","'ProfileType' is defined but never used.",["495"],"'srcOfImg' is assigned a value but never used.","'FC' is defined but never used.","'Field' is defined but never used.","'DialogsInilialStateType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"496","fix":"497"},{"desc":"496","fix":"498"},"Add dependencies array: [isValidInput, setIsValidInput]",{"range":"499","text":"500"},{"range":"501","text":"500"},[642,642],", [isValidInput, setIsValidInput]",[1049,1049]]
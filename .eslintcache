[{"D:\\WEB\\GitHub\\my_social_network\\src\\index.js":"1","D:\\WEB\\GitHub\\my_social_network\\src\\App.js":"2","D:\\WEB\\GitHub\\my_social_network\\src\\reportWebVitals.js":"3","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\redux-store.js":"4","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\profile-reducer.js":"5","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\dialogs-reducer.js":"6","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\users-reducer.js":"7","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\nav-reducer.js":"8","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\auth-reducer.js":"9","D:\\WEB\\GitHub\\my_social_network\\src\\Login\\Login.jsx":"10","D:\\WEB\\GitHub\\my_social_network\\src\\components\\News\\News.jsx":"11","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogsContainer.jsx":"12","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Settings\\Settings.jsx":"13","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\UsersContainer.jsx":"14","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\NavContainer.jsx":"15","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileContainer.jsx":"16","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\HeaderContainer.jsx":"17","D:\\WEB\\GitHub\\my_social_network\\src\\api\\api.js":"18","D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withAuthRedirect.js":"19","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Dialogs.jsx":"20","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\Users.jsx":"21","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Nav.jsx":"22","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\Header.jsx":"23","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\Profile.jsx":"24","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Preloader\\Preloader.jsx":"25","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Message\\Message.jsx":"26","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"27","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Friends\\NavFriends.jsx":"28","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"29","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"30","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"31","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"32","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"33","D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\Validators\\Validaors.js":"34","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\FormsControls\\FormsControls.jsx":"35","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\app-reducer.js":"36","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\selectors\\user-selectors.js":"37","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"38","D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\objects-helpers.js":"39","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Paginator\\Paginator.jsx":"40","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\User\\User.jsx":"41","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\UserPhoto\\UserPhoto.jsx":"42","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\store.js":"43","D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withSuspense.js":"44","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"45","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileData.jsx":"46","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\index.js":"47","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Settings\\Settings.jsx":"48","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\News\\News.jsx":"49","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Friends\\NavFriends.jsx":"50","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"51","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\app-reducer.ts":"52","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\auth-reducer.ts":"53","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\dialogs-reducer.ts":"54","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\profile-reducer.ts":"55","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\nav-reducer.ts":"56","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\users-reducer.ts":"57","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\redux-store.ts":"58","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\UsersContainer.tsx":"59","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\user-selectors.ts":"60","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\Users.tsx":"61","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Paginator\\Paginator.tsx":"62","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileContainer.tsx":"63","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\Profile.tsx":"64","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"65","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"66","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"67","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileData.tsx":"68","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\NavContainer.tsx":"69","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogsContainer.tsx":"70","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\Header.tsx":"71","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Nav.tsx":"72","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Message\\Message.tsx":"73","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Login\\Login.tsx":"74","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\HeaderContainer.tsx":"75","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\Validators\\Validaors.ts":"76","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\FormsControls\\FormsControls.tsx":"77","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\securityAPI.ts":"78","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\authAPI.ts":"79","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\profileAPI.ts":"80","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\types\\apiTypes.ts":"81","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\userAPI.ts":"82","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\api.ts":"83","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\objects-helpers.ts":"84","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\App.tsx":"85","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withSuspense.tsx":"86","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Preloader\\Preloader.tsx":"87","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Dialogs.tsx":"88","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withAuthRedirect.tsx":"89","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\User\\User.tsx":"90","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\UserPhoto\\UserPhoto.tsx":"91","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"92","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"93","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"94"},{"size":208,"mtime":1607487844668,"results":"95","hashOfConfig":"96"},{"size":4331,"mtime":1608321596234,"results":"97","hashOfConfig":"96"},{"size":362,"mtime":499162500000,"results":"98","hashOfConfig":"96"},{"size":1111,"mtime":1607485921767,"results":"99","hashOfConfig":"96"},{"size":5052,"mtime":1608115329496,"results":"100","hashOfConfig":"96"},{"size":1922,"mtime":1608024744083,"results":"101","hashOfConfig":"96"},{"size":3989,"mtime":1607770871552,"results":"102","hashOfConfig":"96"},{"size":603,"mtime":1608024733456,"results":"103","hashOfConfig":"96"},{"size":3074,"mtime":1608112436645,"results":"104","hashOfConfig":"96"},{"size":2769,"mtime":1608015513925,"results":"105","hashOfConfig":"96"},{"size":224,"mtime":1607943390037,"results":"106","hashOfConfig":"96"},{"size":978,"mtime":1608361918012,"results":"107","hashOfConfig":"96"},{"size":244,"mtime":1607943382156,"results":"108","hashOfConfig":"96"},{"size":2046,"mtime":1607499147056,"results":"109","hashOfConfig":"96"},{"size":384,"mtime":1607944136380,"results":"110","hashOfConfig":"96"},{"size":2308,"mtime":1607952065424,"results":"111","hashOfConfig":"96"},{"size":713,"mtime":1608114497131,"results":"112","hashOfConfig":"96"},{"size":2515,"mtime":1607772204148,"results":"113","hashOfConfig":"96"},{"size":526,"mtime":1607027932511,"results":"114","hashOfConfig":"96"},{"size":2040,"mtime":1608361902648,"results":"115","hashOfConfig":"96"},{"size":1160,"mtime":1608019726393,"results":"116","hashOfConfig":"96"},{"size":1722,"mtime":1607953500254,"results":"117","hashOfConfig":"96"},{"size":1502,"mtime":1608113639086,"results":"118","hashOfConfig":"96"},{"size":880,"mtime":1607951795780,"results":"119","hashOfConfig":"96"},{"size":377,"mtime":1608115033617,"results":"120","hashOfConfig":"96"},{"size":441,"mtime":1605470616665,"results":"121","hashOfConfig":"96"},{"size":846,"mtime":1607938511136,"results":"122","hashOfConfig":"96"},{"size":485,"mtime":1607952506852,"results":"123","hashOfConfig":"96"},{"size":718,"mtime":1608361776152,"results":"124","hashOfConfig":"96"},{"size":3247,"mtime":1608103433954,"results":"125","hashOfConfig":"96"},{"size":1486,"mtime":1608361758364,"results":"126","hashOfConfig":"96"},{"size":1381,"mtime":1607488365677,"results":"127","hashOfConfig":"96"},{"size":686,"mtime":1607943100591,"results":"128","hashOfConfig":"96"},{"size":291,"mtime":1607209962400,"results":"129","hashOfConfig":"96"},{"size":1273,"mtime":1608105960366,"results":"130","hashOfConfig":"96"},{"size":1267,"mtime":1607313497445,"results":"131","hashOfConfig":"96"},{"size":721,"mtime":1607380103393,"results":"132","hashOfConfig":"96"},{"size":1457,"mtime":1608027649111,"results":"133","hashOfConfig":"96"},{"size":293,"mtime":1607460554784,"results":"134","hashOfConfig":"96"},{"size":2132,"mtime":1608019944152,"results":"135","hashOfConfig":"96"},{"size":1569,"mtime":1608019754368,"results":"136","hashOfConfig":"96"},{"size":465,"mtime":1607646324245,"results":"137","hashOfConfig":"96"},{"size":2836,"mtime":1605978191526,"results":"138","hashOfConfig":"96"},{"size":351,"mtime":1607627768096,"results":"139","hashOfConfig":"96"},{"size":2919,"mtime":1608110679721,"results":"140","hashOfConfig":"96"},{"size":3419,"mtime":1608109938630,"results":"141","hashOfConfig":"96"},{"size":209,"mtime":1608486707866,"results":"142","hashOfConfig":"143"},{"size":244,"mtime":1607943382156,"results":"144","hashOfConfig":"143"},{"size":224,"mtime":1607943390037,"results":"145","hashOfConfig":"143"},{"size":485,"mtime":1607952506852,"results":"146","hashOfConfig":"143"},{"size":846,"mtime":1607938511136,"results":"147","hashOfConfig":"143"},{"size":1411,"mtime":1610046493257,"results":"148","hashOfConfig":"143"},{"size":3737,"mtime":1610066691981,"results":"149","hashOfConfig":"143"},{"size":2212,"mtime":1610286899360,"results":"150","hashOfConfig":"143"},{"size":5781,"mtime":1610412197048,"results":"151","hashOfConfig":"143"},{"size":739,"mtime":1610066748079,"results":"152","hashOfConfig":"143"},{"size":4731,"mtime":1610072598182,"results":"153","hashOfConfig":"143"},{"size":1657,"mtime":1610160248986,"results":"154","hashOfConfig":"143"},{"size":2916,"mtime":1610072593039,"results":"155","hashOfConfig":"143"},{"size":852,"mtime":1608723659228,"results":"156","hashOfConfig":"143"},{"size":1528,"mtime":1608846103741,"results":"157","hashOfConfig":"143"},{"size":2352,"mtime":1608841904126,"results":"158","hashOfConfig":"143"},{"size":3558,"mtime":1610413473065,"results":"159","hashOfConfig":"143"},{"size":1282,"mtime":1610413401441,"results":"160","hashOfConfig":"143"},{"size":705,"mtime":1610412358131,"results":"161","hashOfConfig":"143"},{"size":3956,"mtime":1610412889047,"results":"162","hashOfConfig":"143"},{"size":3396,"mtime":1610408019084,"results":"163","hashOfConfig":"143"},{"size":3638,"mtime":1608924805912,"results":"164","hashOfConfig":"143"},{"size":616,"mtime":1609011293700,"results":"165","hashOfConfig":"143"},{"size":1197,"mtime":1610294207634,"results":"166","hashOfConfig":"143"},{"size":1757,"mtime":1610415001547,"results":"167","hashOfConfig":"143"},{"size":1881,"mtime":1609011486114,"results":"168","hashOfConfig":"143"},{"size":835,"mtime":1609101075243,"results":"169","hashOfConfig":"143"},{"size":3828,"mtime":1610407507285,"results":"170","hashOfConfig":"143"},{"size":1230,"mtime":1610415185861,"results":"171","hashOfConfig":"143"},{"size":415,"mtime":1609460219117,"results":"172","hashOfConfig":"143"},{"size":1961,"mtime":1610394585777,"results":"173","hashOfConfig":"143"},{"size":284,"mtime":1609889285796,"results":"174","hashOfConfig":"143"},{"size":769,"mtime":1609889286513,"results":"175","hashOfConfig":"143"},{"size":1266,"mtime":1609889287485,"results":"176","hashOfConfig":"143"},{"size":1327,"mtime":1610044998484,"results":"177","hashOfConfig":"143"},{"size":878,"mtime":1610038327170,"results":"178","hashOfConfig":"143"},{"size":256,"mtime":1609889284389,"results":"179","hashOfConfig":"143"},{"size":318,"mtime":1610070236133,"results":"180","hashOfConfig":"143"},{"size":4816,"mtime":1610409460873,"results":"181","hashOfConfig":"143"},{"size":398,"mtime":1610296481763,"results":"182","hashOfConfig":"143"},{"size":372,"mtime":1610297495384,"results":"183","hashOfConfig":"143"},{"size":2973,"mtime":1610288293054,"results":"184","hashOfConfig":"143"},{"size":974,"mtime":1610297107968,"results":"185","hashOfConfig":"143"},{"size":1813,"mtime":1610388626763,"results":"186","hashOfConfig":"143"},{"size":553,"mtime":1610297568307,"results":"187","hashOfConfig":"143"},{"size":2818,"mtime":1610413361345,"results":"188","hashOfConfig":"143"},{"size":1055,"mtime":1610415394060,"results":"189","hashOfConfig":"143"},{"size":1607,"mtime":1610413106479,"results":"190","hashOfConfig":"143"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f4lb3m",{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"256"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},"cse3ot",{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"287"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"287"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"287"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"300"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"300"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"325","messages":"326","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"300"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"300"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"300"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"300"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"300"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"300"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"300"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"300"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"300"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"300"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WEB\\GitHub\\my_social_network\\src\\index.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\App.js",["396","397","398"],"D:\\WEB\\GitHub\\my_social_network\\src\\reportWebVitals.js",[],["399","400"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\redux-store.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\profile-reducer.js",["401"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\dialogs-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\users-reducer.js",["402"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\nav-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\auth-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Login\\Login.jsx",["403","404","405"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\News\\News.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Settings\\Settings.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\UsersContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\NavContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileContainer.jsx",["406","407"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\HeaderContainer.jsx",["408","409"],"D:\\WEB\\GitHub\\my_social_network\\src\\api\\api.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withAuthRedirect.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Dialogs.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\Users.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Nav.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\Header.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\Profile.jsx",["410"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Preloader\\Preloader.jsx",["411"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["412"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Friends\\NavFriends.jsx",["413"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["414"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",[],["415","416"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\Validators\\Validaors.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\FormsControls\\FormsControls.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\app-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\selectors\\user-selectors.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\objects-helpers.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Paginator\\Paginator.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\User\\User.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\UserPhoto\\UserPhoto.jsx",["417"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\store.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withSuspense.js",["418"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileData.jsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\index.js",[],["419","420"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Settings\\Settings.jsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\News\\News.jsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Friends\\NavFriends.jsx",["421"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './NavFriends.module.css';\r\n\r\nconst NavFriends = (props) => {\r\n    return (\r\n\r\n\r\n        <div className={s.navFriendsElement}>\r\n            <div className={s.navFriendsElementImageDiv}>\r\n                <img src={props.imgSrc} alt=\"avatar\" />\r\n            </div>\r\n            <div className={s.navFriendsElementName}>{props.name}</div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default NavFriends;\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["422"],"import React from 'react';\r\nimport s from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n\r\n            <NavLink to={\"/Dialogs/\" + props.id}>\r\n                <div className=\r\n                    {props.paramsUserId == props.id ? s.active : s.noActive + ' ' + s.avaImg} >\r\n                    <img src={props.imgSrc} alt=\"avatar\" />\r\n                </div>\r\n                <div className={s.name}>\r\n                    {props.name}\r\n                </div>\r\n            </NavLink>\r\n\r\n            {/* jsx элемент принимает данные для отрисовки из props, которые туда попали из массива данных через .map */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\app-reducer.ts",[],["423","424"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\auth-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\dialogs-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\profile-reducer.ts",["425"],"import { stopSubmit, FormAction } from 'redux-form';\nimport { PhotosType, postDataType, ProfileType } from '../types/types';\nimport { profileAPI } from './../api/profileAPI';\nimport { BaseThunkType, InferActionTypes } from './redux-store';\n\nexport type InitialStateType = typeof initialState\nexport type ActionTypes = InferActionTypes<typeof profileReducerActions>\ntype ThunkType = BaseThunkType<ActionTypes | FormAction>\n\nlet initialState = {\n    postsData: [\n        { id: 1, likes: 121, message: 'Hallow it\\'s my first post. ' },\n        { id: 2, likes: 231, message: 'Here should be second post but i\\'v got no idea.' },\n        { id: 3, likes: 321, message: 'For third post i\\'v still have no idea. I guess twitter in not for me.' }\n    ] as Array<postDataType>,\n    profile: null as ProfileType | null,\n    status: ' ' as string,\n    isValidInput: false as boolean,\n    isAuth: false as boolean\n};\n\nconst profileReducer = (state = initialState, action: ActionTypes): InitialStateType => {\n    switch (action.type) {\n\n        case 'ADD_POST':\n            let newPost = {\n                id: 5,\n                message: action.newTextBody,\n                likes: 0\n            };\n            return {\n                ...state,\n                postsData: [...state.postsData, newPost],\n            };\n        case 'SET_USER_PROFILE':\n            return {\n                ...state,\n                profile: action.profile\n            };\n\n        case 'SET_STATUS':\n            return {\n                ...state,\n                status: action.status\n            }\n        case 'DELETE_POST':\n            return {\n                ...state,\n                postsData: state.postsData.filter(p => p.id != action.postId)\n            }\n        case 'SAVE_PHOTO_SUCCESS':\n            return {\n                ...state,\n                profile: {\n                    ...state.profile,\n                    photos: action.photos\n                } as ProfileType\n                // временное решение\n            }\n        case 'SET_IS_VALID_INPUT':\n            return {\n                ...state,\n                isValidInput: action.isValid\n            }\n\n\n        default:\n            return state;\n\n    };\n\n};\n// action creators\n\n\n\nexport const profileReducerActions = {\n    deletePostAC: (postId: number) => ({ type: 'DELETE_POST', postId } as const),\n    addNewPostAC: (newTextBody: string) => ({ type: 'ADD_POST', newTextBody } as const),\n    setUserProfile: (profile: ProfileType | null) => ({ type: 'SET_USER_PROFILE', profile } as const),\n    setStatus: (status: string) => ({ type: 'SET_STATUS', status } as const),\n    savaPhotoSuccess: (photos: PhotosType) => ({ type: 'SAVE_PHOTO_SUCCESS', photos } as const),\n    setIsValidInput: (isValid: boolean) => ({ type: 'SET_IS_VALID_INPUT', isValid } as const)\n}\n/// thunks\n\n\nexport const getProfileDataThunk = (userId: number | null): ThunkType => async (dispatch) => {\n    if (userId !== null) {\n        let data = await profileAPI.getProfileData(userId)\n        dispatch(profileReducerActions.setUserProfile(data));\n    }\n}\n\nexport const getStatusThunk = (userId: number | null): ThunkType => async (dispatch) => {\n    if (userId !== null) {\n        let data = await profileAPI.getStatus(userId)\n        dispatch(profileReducerActions.setStatus(data));\n    }\n}\n//по окончанию асинхронной операции мы пытаемся выполнить try, если пришла ошибка -\n// - мы перехватываем её catch и что то с ней делаем, в ней есть message. код шибки(500/404 и тд.)\n// это локальный обработчик ошибок в противовес глоаблному в app.js\nexport const updateStatusThunk = (status: string): ThunkType => async (dispatch) => {\n    try {\n        let data = await profileAPI.updateStatus(status)\n        if (data.resultCode === 0) {\n            dispatch(profileReducerActions.setStatus(status));\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const savePhotoThunk = (file: File): ThunkType => async (dispatch) => {\n    let data = await profileAPI.putNewPhoto(file)\n    if (data.resultCode === 0) {\n        dispatch(profileReducerActions.savaPhotoSuccess(data.data.photos));\n    }\n}\n\nexport const saveProfileThunk = (profile: ProfileType | null): ThunkType => async (dispatch, getState) => {\n    if (profile !== null) {\n        let userId = getState().auth.userId\n        let data = await profileAPI.saveProfile(profile)\n        if (data.resultCode === 0) {\n            if (userId !== null) {\n                dispatch(getProfileDataThunk(userId))\n            } else {\n                throw new Error('userId cant be null')\n            }\n            dispatch(profileReducerActions.setIsValidInput(true))\n        } else {\n            dispatch(profileReducerActions.setIsValidInput(false))\n            let wrongNetwork = data.messages[0].slice(\n                data.messages[0].indexOf(\">\") + 1,\n                data.messages[0].indexOf(\")\")\n            )\n                .toLocaleLowerCase();\n            dispatch(\n                stopSubmit(\"edit-profile\", {\n                    contacts: { [wrongNetwork]: data.messages[0] }\n                })\n            );\n            return Promise.reject(data.messages[0]);\n\n            // как сделать чтобы все сообщения сразу подсветились? \n        }\n    }\n}\n\n\n\nexport default profileReducer;\n\n// let key = data.messages[0].match(/Contacts->(\\w+)/)[1].toLowerCase();\n// dispatch(stopSubmit('edit-profile', {\n//     contacts: { [key]: data.messages[0] },\n// })); тоже самое что и выше в else только с регулярным выражением. ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\nav-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\users-reducer.ts",["426"],"import { userAPI } from \"../api/userAPI\";\nimport { UsersType } from '../types/types';\nimport { updateObjectInArray } from '../Utils/objects-helpers';\nimport { BaseThunkType, InferActionTypes } from './redux-store';\nimport { FormAction } from 'redux-form';\nimport { Dispatch } from \"react\";\n\nexport type InitialStateType = typeof inilialState\nexport type ActionTypes = InferActionTypes<typeof UsersReducerActions>\ntype ThunkType = BaseThunkType<ActionTypes | FormAction>\ntype DispatchType = Dispatch<ActionTypes>\n\nlet inilialState = {\n    usersData: [] as Array<UsersType>,\n    pageSize: 10 as number,\n    totalUsersCount: 0 as number,\n    currentPage: 1 as number,\n    isFetching: true as boolean,\n    followingInProgress: [] as Array<number>, //array of usersId\n}\n\nconst usersReducer = (state = inilialState, action: ActionTypes): InitialStateType => {\n\n    switch (action.type) {\n\n        case 'usersReduser/FOLLOW':\n            return {\n                ...state,\n                usersData: updateObjectInArray(state.usersData, action.userId, 'id', { followed: true })\n            }\n        case 'usersReduser/UNFOLLOW':\n            return {\n                ...state,\n                usersData: updateObjectInArray(state.usersData, action.userId, 'id', { followed: false })\n            }\n        case 'usersReduser/SET_USERS': {\n            return {\n                ...state,\n                usersData: [...action.users]\n            }\n        }\n        case 'usersReduser/SET_CURRENT_PAGE': {\n            return {\n                ...state,\n                currentPage: action.page\n            }\n        }\n        case 'usersReduser/SET_TOTAL_USERS_COUNT': {\n            return {\n                ...state,\n                totalUsersCount: action.totalCount\n            }\n        }\n        case 'usersReduser/TOGGLE_IS_FETCHING': {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case 'usersReduser/TOGGLE_IS_FOLLOWING_PROGRESS': {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport const UsersReducerActions = {\n    follow: (userId: number) => ({ type: 'usersReduser/FOLLOW', userId } as const),\n    unFollow: (userId: number) => ({ type: 'usersReduser/UNFOLLOW', userId } as const),\n    setUsers: (users: Array<UsersType>) => ({ type: 'usersReduser/SET_USERS', users } as const),\n    showMore: () => ({ type: 'usersReduser/SHOWMORE' } as const),\n    setCurrentPage: (page: number) => ({ type: 'usersReduser/SET_CURRENT_PAGE', page } as const),\n    setTotalUsersCount: (totalCount: number) => ({ type: 'usersReduser/SET_TOTAL_USERS_COUNT', totalCount } as const),\n    setToggleFetching: (isFetching: boolean) => ({ type: 'usersReduser/TOGGLE_IS_FETCHING', isFetching } as const),\n    toggleFollowingIsFetching: (isFetching: boolean, userId: number) => ({ type: 'usersReduser/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId } as const)\n}\n\n// functions + thunks \n\nexport const getUsersThunk = (currentPage: number, pageSize: number): ThunkType => async (dispatch) => {\n    dispatch(UsersReducerActions.setToggleFetching(true));\n    let data = await userAPI.getUsers(currentPage, pageSize)\n    dispatch(UsersReducerActions.setToggleFetching(false));\n    dispatch(UsersReducerActions.setUsers(data.items));\n    dispatch(UsersReducerActions.setTotalUsersCount(data.totalCount));\n}\n\nconst followUnfollowFlow = async (dispatch: DispatchType, userId: number, apiMethod: any, actionCreator: (userId: number) => ActionTypes) => {\n    dispatch(UsersReducerActions.toggleFollowingIsFetching(true, userId))\n    let data = await apiMethod(userId)\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(UsersReducerActions.toggleFollowingIsFetching(false, userId));\n}\nexport const followThunk = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userAPI), UsersReducerActions.follow);\n    }\n}\nexport const unfollowThunk = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI), UsersReducerActions.unFollow);\n    }\n}\n// для обхода типизации в usersContainer \nexport const setCurrentPageThunk = (page: number): BaseThunkType<ActionTypes, void> => (dispatch) => {\n    dispatch(UsersReducerActions.setCurrentPage(page))\n}\n\n\nexport default usersReducer;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\redux-store.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\user-selectors.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\Users.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Paginator\\Paginator.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileContainer.tsx",["427","428"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\Profile.tsx",["429"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["430","431"],"import { connect } from 'react-redux';\r\nimport { profileReducerActions } from '../../../redux/profile-reducer';\r\nimport MyPosts, { MapDispatchPostsType, MapPropsType } from './MyPosts';\r\nimport { reset } from 'redux-form';\r\nimport { postDataType, ProfileType } from '../../../types/types';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapPropsType, MapDispatchPostsType, {}, AppStateType>(mapStateToProps, {\r\n    addPost: profileReducerActions.addNewPostAC, resetForm: reset\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer; ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["432"],"import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { isUserImgLarge } from '../../Common/UserPhoto/UserPhoto';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ProfileData from './ProfileData'\r\nimport { ProfileType } from '../../../types/types';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    isOwner: boolean\r\n    isValidInput: boolean\r\n\r\n    setIsValidInput: (isValid: boolean) => void\r\n    saveProfileThunk: (formData: ProfileType) => void\r\n    savePhotoThunk: (file: File) => void\r\n    updateStatusThunk: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({\r\n    profile, updateStatusThunk, status, isOwner,\r\n    savePhotoThunk, saveProfileThunk, isValidInput, setIsValidInput }) => {\r\n\r\n    useEffect(() => {\r\n        isValidInput && setEditMode(false);\r\n        setIsValidInput(false)\r\n    })\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    // e.target.files?.length - если files не null то берём длинну и выполняем тело. (вопросительный знак!!!)\r\n    // такая же запись по старому if (e.target.files && e.target.files.length)\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            savePhotoThunk(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        saveProfileThunk(formData);\r\n        // isValidInput && setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.imageBlock} >\r\n                    {/* img */}\r\n                    <div className={s.innetImageBlock}>\r\n                        <img className={s.userPhoto}\r\n                            src={isUserImgLarge(profile)} alt=\"profilePhoto\" />\r\n                        <div className={s.onImgButtons}>\r\n                            <div className={s.changePhotoBtn}>\r\n                                {/* changePhoto button */}\r\n                                {isOwner && <input id='upload' type={'file'} title=' ' onChange={onMainPhotoSelected} />}\r\n                                <label htmlFor='upload'>Change photo</label>\r\n                            </div>\r\n                            <div>\r\n                                {/* eddit button */}\r\n                                {isOwner &&\r\n                                    <div className={s.editButton}>\r\n                                        <button onClick={() => { setEditMode(true) }}>Edit info</button>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={s.infoBlock}>\r\n                    {/* status */}\r\n                    <div>\r\n                        <ProfileStatusWithHooks\r\n                            status={status}\r\n                            updateStatusThunk={updateStatusThunk} />\r\n                    </div>\r\n                    <div>\r\n                        {editMode\r\n                            ? <ProfileDataForm\r\n                                profile={profile}\r\n                                initialValues={profile}\r\n                                onSubmit={onSubmit}\r\n                            />\r\n                            : <ProfileData\r\n                                profile={profile}\r\n                            // isOwner={isOwner}\r\n                            />}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileData.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\NavContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\Header.tsx",["433"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Nav.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Login\\Login.tsx",["434","435","436"],"import React from 'react';\r\nimport { InjectedFormProps, reduxForm, submit } from 'redux-form';\r\nimport { Input } from '../components/Common/FormsControls/FormsControls';\r\nimport { required } from '../Utils/Validators/Validaors';\r\nimport { LoginThunk, setErrorThunk } from '../redux/auth-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport s from './Login.module.css'\r\nimport { createField } from '../components/Common/FormsControls/FormsControls';\r\nimport { AppStateType } from '../redux/redux-store';\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n    setErrorThunk: (error: string | null) => void\r\n    inStateError: string | null\r\n}\r\n\r\nexport type LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = ({ handleSubmit, error, captchaUrl, setErrorThunk, inStateError }) => {\r\n    return (\r\n        <form className={s.loginForm} onSubmit={handleSubmit}>\r\n            {/* createField = (validate, placeholder, component, name, type) */}\r\n            {createField<LoginFormValuesTypeKeys>([required], 'Email', Input, 'email', 'text')}\r\n            {createField<LoginFormValuesTypeKeys>([required], 'Password', Input, 'password', 'text')}\r\n\r\n            {captchaUrl && createField<LoginFormValuesTypeKeys>([required], 'Captha', Input, 'captcha', 'text')}\r\n            <div className={s.buttonAndRemember}>\r\n                <div className={s.loginButton}>\r\n                    <button>LOGIN</button>\r\n                </div>\r\n                <div className={s.rememberMeDiv}>\r\n                    <label >\r\n                        {createField<LoginFormValuesTypeKeys>([], undefined, Input, 'rememberMe', 'checkbox')}\r\n                        <span>remember me</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            {error ? setErrorThunk(error) : null}\r\n            <div className={inStateError || captchaUrl ? s.formSummeryError : ''}>\r\n                {inStateError || captchaUrl && <div>{inStateError}</div>}\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n    inStateError: string | null\r\n}\r\n\r\ntype MapDispatcPropsType = {\r\n    LoginThunk: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n    setErrorThunk: (error: string | null) => void\r\n}\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatcPropsType> = ({ LoginThunk, isAuth, captchaUrl, setErrorThunk, inStateError }) => {\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        LoginThunk(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginInner}>\r\n            <h1>login</h1>\r\n            <LoginReduxForm\r\n                onSubmit={onSubmit}\r\n                captchaUrl={captchaUrl}\r\n                setErrorThunk={setErrorThunk}\r\n                inStateError={inStateError}\r\n            />\r\n            <div>\r\n                {captchaUrl && <img className={s.captcha} src={captchaUrl} alt=\"captchaImg\" />}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl,\r\n    inStateError: state.auth.inStateError\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { LoginThunk, setErrorThunk })(Login);","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\HeaderContainer.tsx",["437"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\Validators\\Validaors.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\FormsControls\\FormsControls.tsx",["438"],"import React, { FC } from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form'\r\nimport { FieldValidatorType } from '../../../Utils/Validators/Validaors'\r\n\r\n// из прорсов удалил input, \r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(\r\n    validate: Array<FieldValidatorType>,\r\n    placeholder: string | undefined,\r\n    component: React.FC<WrappedFieldProps> | \"input\" | \"select\" | \"textarea\" | undefined,\r\n    name: FormKeysType,\r\n    type: string,\r\n    rows?: string\r\n) {\r\n    return (\r\n        <div>\r\n            <Field\r\n                validate={validate}\r\n                placeholder={placeholder}\r\n                component={component}\r\n                name={name}\r\n                type={type}\r\n                rows={rows}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <div className={s.formErrorDiv}>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n\r\n    // const { input, meta, child, ...restProps } = props\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}><textarea className={s.textarea} {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n\r\n    // const { input, meta, child, ...restProps } = props\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}><input className={s.input} {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\securityAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\authAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\profileAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\types\\apiTypes.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\userAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\api.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\objects-helpers.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\App.tsx",["439"],"import React, { Component } from 'react';\nimport './App.css';\nimport Settings from './components/Settings/Settings';\nimport { Route, withRouter, BrowserRouter, Redirect, Switch, HashRouter } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport NavContainer from './components/Nav/NavContainer';\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { connect, Provider } from 'react-redux';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport store, { AppStateType } from './redux/redux-store';\nimport { withSuspense } from './Hoc/withSuspense';\n\nconst News = React.lazy(() => import('./components/News/News'))\nconst Login = React.lazy(() => import('./Login/Login'))\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n  initializeApp: () => void\n}\n\nconst SuspendedProfile = withSuspense(ProfileContainer) \nconst SuspendedDialogs = withSuspense(DialogsContainer)\n\nclass App extends Component<MapPropsType & DispatchPropsType> {\n  //тут мы можем задиспатчить санку на отображение глобальной ошибки.\n  catchAllUnhandledError = (e: PromiseRejectionEvent) => {\n    console.log('some error.');\n  }\n  //метод жизненного цикла, который выполнится после вмонтирования компоненты \n  // window.addEventListener - садй эффект но в comp.DidMount допустим. \n  // это глобальный обработчик ошибок в противовес локальному в редюссоре\n  // если в редюсоре перехвачена ошибка - тут её не будет.\n  componentDidMount() {\n    this.props.initializeApp()\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledError);\n  }\n  // подчистил мусор. при умирании компоненты нужно отписать слушателя.\n  componentWillUnmount() {\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledError);\n  }\n\n  render() {\n    //пока не инициализированы(все данные в редюсор не пришли) - прелоадер. \n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    //exact для отображения точный совпадений url. если /login/???? то не отобразит. \n    // swtich from react-render-dom. идёт по списку роутов до момента совпадения url. схоже с exact\n    return (\n      <div className=\"app-wrapper\">\n\n        <HeaderContainer />\n        <NavContainer />\n        <div className='app-wrapper-content'>\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to={'/Profile'} />} />\n            <Route path='/Profile/:userId?' render={() => <SuspendedProfile/>} />\n            <Route path='/Dialogs/:userId?' render={() => <SuspendedDialogs/>} />\n            {/* <Route path='/Profile/:userId?' render={() => <ProfileContainer />} />\n            <Route path='/Dialogs/:userId?' render={() => <DialogsContainer />} /> */}\n            <Route path='/Users' render={() => <UsersContainer />} />\n            <Route path='/News' render={withSuspense(News)} />\n            <Route path='/Settings' render={() => <Settings />} />\n            <Route path='/Login' render={() => { return <React.Suspense fallback={<Preloader />}> <Login /> </React.Suspense> }} />\n            <Route exact path='*' render={() => <div>404 not found</div>} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized\n})\n\n// AppContainer результат функции compose.\n// compose один за одним выполняет хоки. \n// connect передаёт данные в компаненту через MSTP и MDTP\n// brouser router передаёт информацию о роутинге, url\n// provider передаёт store в контекст всех дочерних компанент \n// в контект уместо положить тема(тёмная,светлая), локализация(en/ru)\nlet AppContainer = compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJsApp: React.FC = () => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  )\n}\n\n\nexport default SamuraiJsApp; ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withSuspense.tsx",["440"],"import React, { Suspense } from 'react';\r\nimport Preloader from '../components/Common/Preloader/Preloader';\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader />}>\r\n                <WrappedComponent {...props} />\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Preloader\\Preloader.tsx",["441"],"import preloader from '../../../svg/Eclipse-1s-200px.svg';\r\nimport React from 'react';\r\nimport s from './Preloader.module.css';\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.ldsEllipsis}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Dialogs.tsx",["442","443"],"import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm, InjectedFormProps } from 'redux-form';\r\nimport { Textarea } from '../Common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../Utils/Validators/Validaors';\r\nimport { DialogsInilialStateType } from './../../redux/dialogs-reducer'\r\nimport { dialogsDataType, messagesDataType } from '../../types/types';\r\nimport { createField } from './../Common/FormsControls/FormsControls';\r\n\r\ntype PropsType = {\r\n    // dialogsPage: DialogsInilialStateType\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n    sendMessage: (newMessageBody: string) => void\r\n    resetForm: (formName: string) => void\r\n    match: {\r\n        params: {\r\n            userId: number\r\n        }\r\n    }\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n\r\n    let addNewMessage = (values: NewMessageFormType) => {\r\n        props.sendMessage(values.newMessageBody);\r\n        props.resetForm('dialogAddMessageForm')\r\n    };\r\n\r\n    let dialogsElements =\r\n        props.dialogsData.map((dialogEl) =>\r\n            <DialogItem paramsUserId={props.match.params.userId} key={dialogEl.id} name={dialogEl.name} id={dialogEl.id} imgSrc={dialogEl.imgSrc} />)\r\n    let messagesElements =\r\n        props.messagesData.map((messageEl) =>\r\n            <Message key={messageEl.id} message={messageEl.message} addresserYou={messageEl.addresserYou} />)\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.message}>\r\n                    {messagesElements}\r\n                </div>\r\n                <div className={s.messageInput}>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nexport type NewMessageFormType = {\r\n    newMessageBody: string\r\n}\r\n\r\ntype NewMessageFormTypeKeys = Extract<keyof NewMessageFormType, string>\r\ntype AddMessageFormOwnPropsType = {}\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormType, AddMessageFormOwnPropsType> & AddMessageFormOwnPropsType>  = (props) => {\r\n    return (\r\n        <form  className={s.dialogsForm} onSubmit={props.handleSubmit}>\r\n          \r\n            {createField<NewMessageFormTypeKeys>([required, maxLength50], 'Enter your message', Textarea, 'newMessageBody', 'text', '1')}\r\n            <div className={s.dialogsButton}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<NewMessageFormType, AddMessageFormOwnPropsType>({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withAuthRedirect.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\User\\User.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\UserPhoto\\UserPhoto.tsx",["444"],"import React from 'react';\r\nimport noUserPhoto from '../../../imagas/no-avatar.png'\r\nimport { ProfileType, UsersType } from '../../../types/types';\r\n\r\nexport const isUserImgSmall = (user: UsersType) => {\r\n    return user.photos.small !== null\r\n        ? user.photos.small\r\n        : noUserPhoto\r\n\r\n}\r\n\r\nexport const isUserImgLarge = (profile: ProfileType) => {\r\n    return profile.photos.large !== null\r\n        ? profile.photos.large\r\n        : profile.photos.small !== null\r\n            ? profile.photos.small\r\n            : noUserPhoto\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["445"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],{"ruleId":"446","severity":1,"message":"447","line":1,"column":28,"nodeType":"448","messageId":"449","endLine":1,"endColumn":32},{"ruleId":"446","severity":1,"message":"450","line":1,"column":34,"nodeType":"448","messageId":"449","endLine":1,"endColumn":42},{"ruleId":"446","severity":1,"message":"451","line":4,"column":29,"nodeType":"448","messageId":"449","endLine":4,"endColumn":42},{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","severity":1,"message":"457","line":52,"column":61,"nodeType":"458","messageId":"459","endLine":52,"endColumn":63},{"ruleId":"456","severity":1,"message":"457","line":72,"column":65,"nodeType":"458","messageId":"459","endLine":72,"endColumn":67},{"ruleId":"446","severity":1,"message":"460","line":2,"column":21,"nodeType":"448","messageId":"449","endLine":2,"endColumn":27},{"ruleId":"461","severity":1,"message":"462","line":32,"column":31,"nodeType":"463","messageId":"464","endLine":32,"endColumn":33},{"ruleId":"461","severity":1,"message":"462","line":32,"column":45,"nodeType":"463","messageId":"464","endLine":32,"endColumn":47},{"ruleId":"446","severity":1,"message":"465","line":6,"column":10,"nodeType":"448","messageId":"449","endLine":6,"endColumn":26},{"ruleId":"456","severity":1,"message":"457","line":30,"column":44,"nodeType":"458","messageId":"459","endLine":30,"endColumn":46},{"ruleId":"446","severity":1,"message":"465","line":5,"column":10,"nodeType":"448","messageId":"449","endLine":5,"endColumn":26},{"ruleId":"446","severity":1,"message":"466","line":7,"column":10,"nodeType":"448","messageId":"449","endLine":7,"endColumn":18},{"ruleId":"446","severity":1,"message":"467","line":2,"column":8,"nodeType":"448","messageId":"449","endLine":2,"endColumn":9},{"ruleId":"446","severity":1,"message":"468","line":1,"column":8,"nodeType":"448","messageId":"449","endLine":1,"endColumn":17},{"ruleId":"456","severity":1,"message":"469","line":12,"column":41,"nodeType":"458","messageId":"459","endLine":12,"endColumn":43},{"ruleId":"446","severity":1,"message":"470","line":2,"column":10,"nodeType":"448","messageId":"449","endLine":2,"endColumn":17},{"ruleId":"471","severity":1,"message":"472","line":13,"column":5,"nodeType":"448","endLine":13,"endColumn":14,"suggestions":"473"},{"ruleId":"452","replacedBy":"474"},{"ruleId":"454","replacedBy":"475"},{"ruleId":"446","severity":1,"message":"476","line":1,"column":8,"nodeType":"448","messageId":"449","endLine":1,"endColumn":13},{"ruleId":"446","severity":1,"message":"450","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":25},{"ruleId":"452","replacedBy":"477"},{"ruleId":"454","replacedBy":"478"},{"ruleId":"446","severity":1,"message":"470","line":2,"column":10,"nodeType":"448","messageId":"449","endLine":2,"endColumn":17},{"ruleId":"456","severity":1,"message":"469","line":12,"column":41,"nodeType":"458","messageId":"459","endLine":12,"endColumn":43},{"ruleId":"452","replacedBy":"477"},{"ruleId":"454","replacedBy":"478"},{"ruleId":"456","severity":1,"message":"457","line":49,"column":61,"nodeType":"458","messageId":"459","endLine":49,"endColumn":63},{"ruleId":"456","severity":1,"message":"457","line":65,"column":65,"nodeType":"458","messageId":"459","endLine":65,"endColumn":67},{"ruleId":"479","severity":1,"message":"465","line":6,"column":10,"nodeType":"448","messageId":"449","endLine":6,"endColumn":26},{"ruleId":"456","severity":1,"message":"457","line":48,"column":44,"nodeType":"458","messageId":"459","endLine":48,"endColumn":46},{"ruleId":"479","severity":1,"message":"467","line":2,"column":8,"nodeType":"448","messageId":"449","endLine":2,"endColumn":9},{"ruleId":"479","severity":1,"message":"480","line":5,"column":10,"nodeType":"448","messageId":"449","endLine":5,"endColumn":22},{"ruleId":"479","severity":1,"message":"481","line":5,"column":24,"nodeType":"448","messageId":"449","endLine":5,"endColumn":35},{"ruleId":"471","severity":1,"message":"472","line":26,"column":5,"nodeType":"448","endLine":26,"endColumn":14,"suggestions":"482"},{"ruleId":"479","severity":1,"message":"483","line":25,"column":13,"nodeType":"448","messageId":"449","endLine":25,"endColumn":21},{"ruleId":"479","severity":1,"message":"460","line":2,"column":40,"nodeType":"448","messageId":"449","endLine":2,"endColumn":46},{"ruleId":"461","severity":1,"message":"462","line":48,"column":31,"nodeType":"463","messageId":"464","endLine":48,"endColumn":33},{"ruleId":"461","severity":1,"message":"462","line":48,"column":45,"nodeType":"463","messageId":"464","endLine":48,"endColumn":47},{"ruleId":"479","severity":1,"message":"465","line":5,"column":10,"nodeType":"448","messageId":"449","endLine":5,"endColumn":26},{"ruleId":"479","severity":1,"message":"484","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":19},{"ruleId":"479","severity":1,"message":"451","line":4,"column":29,"nodeType":"448","messageId":"449","endLine":4,"endColumn":42},{"ruleId":"479","severity":1,"message":"450","line":1,"column":17,"nodeType":"448","messageId":"449","endLine":1,"endColumn":25},{"ruleId":"479","severity":1,"message":"468","line":1,"column":8,"nodeType":"448","messageId":"449","endLine":1,"endColumn":17},{"ruleId":"479","severity":1,"message":"485","line":5,"column":10,"nodeType":"448","messageId":"449","endLine":5,"endColumn":15},{"ruleId":"479","severity":1,"message":"486","line":8,"column":10,"nodeType":"448","messageId":"449","endLine":8,"endColumn":33},{"ruleId":"479","severity":1,"message":"476","line":1,"column":8,"nodeType":"448","messageId":"449","endLine":1,"endColumn":13},{"ruleId":"479","severity":1,"message":"480","line":2,"column":10,"nodeType":"448","messageId":"449","endLine":2,"endColumn":22},"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'BrowserRouter' is defined but never used.","no-native-reassign",["487"],"no-negated-in-lhs",["488"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'submit' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'withAuthRedirect' is defined but never used.","'Redirect' is defined but never used.","'s' is defined but never used.","'preloader' is defined but never used.","Expected '===' and instead saw '=='.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setEditMode'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isValidInput, setIsValidInput] as a second argument to the useEffect Hook.",["489"],["487"],["488"],"'React' is defined but never used.",["487"],["488"],"@typescript-eslint/no-unused-vars","'postDataType' is defined but never used.","'ProfileType' is defined but never used.",["490"],"'srcOfImg' is assigned a value but never used.","'FC' is defined but never used.","'Field' is defined but never used.","'DialogsInilialStateType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"491","fix":"492"},{"desc":"491","fix":"493"},"Add dependencies array: [isValidInput, setIsValidInput]",{"range":"494","text":"495"},{"range":"496","text":"495"},[642,642],", [isValidInput, setIsValidInput]",[1049,1049]]
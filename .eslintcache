[{"D:\\WEB\\GitHub\\my_social_network\\src\\index.js":"1","D:\\WEB\\GitHub\\my_social_network\\src\\App.js":"2","D:\\WEB\\GitHub\\my_social_network\\src\\reportWebVitals.js":"3","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\redux-store.js":"4","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\profile-reducer.js":"5","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\dialogs-reducer.js":"6","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\users-reducer.js":"7","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\nav-reducer.js":"8","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\auth-reducer.js":"9","D:\\WEB\\GitHub\\my_social_network\\src\\Login\\Login.jsx":"10","D:\\WEB\\GitHub\\my_social_network\\src\\components\\News\\News.jsx":"11","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogsContainer.jsx":"12","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Settings\\Settings.jsx":"13","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\UsersContainer.jsx":"14","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\NavContainer.jsx":"15","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileContainer.jsx":"16","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\HeaderContainer.jsx":"17","D:\\WEB\\GitHub\\my_social_network\\src\\api\\api.js":"18","D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withAuthRedirect.js":"19","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Dialogs.jsx":"20","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\Users.jsx":"21","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Nav.jsx":"22","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\Header.jsx":"23","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\Profile.jsx":"24","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Preloader\\Preloader.jsx":"25","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Message\\Message.jsx":"26","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"27","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Friends\\NavFriends.jsx":"28","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"29","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"30","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"31","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"32","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"33","D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\Validators\\Validaors.js":"34","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\FormsControls\\FormsControls.jsx":"35","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\app-reducer.js":"36","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\selectors\\user-selectors.js":"37","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"38","D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\objects-helpers.js":"39","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Paginator\\Paginator.jsx":"40","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\User\\User.jsx":"41","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\UserPhoto\\UserPhoto.jsx":"42","D:\\WEB\\GitHub\\my_social_network\\src\\redux\\store.js":"43","D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withSuspense.js":"44","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx":"45","D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileData.jsx":"46","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\app-reducer.ts":"47","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\auth-reducer.ts":"48","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\dialogs-reducer.ts":"49","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\profile-reducer.ts":"50","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\nav-reducer.ts":"51","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\users-reducer.ts":"52","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\redux-store.ts":"53","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\UsersContainer.tsx":"54","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\user-selectors.ts":"55","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\Users.tsx":"56","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Paginator\\Paginator.tsx":"57","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileContainer.tsx":"58","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\Profile.tsx":"59","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"60","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"61","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"62","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileData.tsx":"63","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\NavContainer.tsx":"64","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogsContainer.tsx":"65","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\Header.tsx":"66","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Nav.tsx":"67","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Message\\Message.tsx":"68","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Login\\Login.tsx":"69","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\HeaderContainer.tsx":"70","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\Validators\\Validaors.ts":"71","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\FormsControls\\FormsControls.tsx":"72","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\securityAPI.ts":"73","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\authAPI.ts":"74","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\profileAPI.ts":"75","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\types\\apiTypes.ts":"76","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\userAPI.ts":"77","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\api.ts":"78","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\objects-helpers.ts":"79","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\App.tsx":"80","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withSuspense.tsx":"81","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Preloader\\Preloader.tsx":"82","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Dialogs.tsx":"83","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withAuthRedirect.tsx":"84","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\User\\User.tsx":"85","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\UserPhoto\\UserPhoto.tsx":"86","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"87","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"88","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"89","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\index.tsx":"90","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Settings\\Settings.tsx":"91","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\News\\News.tsx":"92","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Friends\\NavFriends.tsx":"93","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"94","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\usersSearchForm.tsx":"95","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\profile-selectors.ts":"96","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Hooks\\usePreviouse.tsx":"97","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\login-selectors.ts":"98","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\dialogs-selectors.ts":"99","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\header-selectors.ts":"100"},{"size":208,"mtime":1607487844668,"results":"101","hashOfConfig":"102"},{"size":4331,"mtime":1608321596234,"results":"103","hashOfConfig":"102"},{"size":362,"mtime":499162500000,"results":"104","hashOfConfig":"102"},{"size":1111,"mtime":1607485921767,"results":"105","hashOfConfig":"102"},{"size":5052,"mtime":1608115329496,"results":"106","hashOfConfig":"102"},{"size":1922,"mtime":1608024744083,"results":"107","hashOfConfig":"102"},{"size":3989,"mtime":1607770871552,"results":"108","hashOfConfig":"102"},{"size":603,"mtime":1608024733456,"results":"109","hashOfConfig":"102"},{"size":3074,"mtime":1608112436645,"results":"110","hashOfConfig":"102"},{"size":2769,"mtime":1608015513925,"results":"111","hashOfConfig":"102"},{"size":224,"mtime":1607943390037,"results":"112","hashOfConfig":"102"},{"size":978,"mtime":1608361918012,"results":"113","hashOfConfig":"102"},{"size":244,"mtime":1607943382156,"results":"114","hashOfConfig":"102"},{"size":2046,"mtime":1607499147056,"results":"115","hashOfConfig":"102"},{"size":384,"mtime":1607944136380,"results":"116","hashOfConfig":"102"},{"size":2308,"mtime":1607952065424,"results":"117","hashOfConfig":"102"},{"size":713,"mtime":1608114497131,"results":"118","hashOfConfig":"102"},{"size":2515,"mtime":1607772204148,"results":"119","hashOfConfig":"102"},{"size":526,"mtime":1607027932511,"results":"120","hashOfConfig":"102"},{"size":2040,"mtime":1608361902648,"results":"121","hashOfConfig":"102"},{"size":1160,"mtime":1608019726393,"results":"122","hashOfConfig":"102"},{"size":1722,"mtime":1607953500254,"results":"123","hashOfConfig":"102"},{"size":1502,"mtime":1608113639086,"results":"124","hashOfConfig":"102"},{"size":880,"mtime":1607951795780,"results":"125","hashOfConfig":"102"},{"size":377,"mtime":1608115033617,"results":"126","hashOfConfig":"102"},{"size":441,"mtime":1605470616665,"results":"127","hashOfConfig":"102"},{"size":846,"mtime":1607938511136,"results":"128","hashOfConfig":"102"},{"size":485,"mtime":1607952506852,"results":"129","hashOfConfig":"102"},{"size":718,"mtime":1608361776152,"results":"130","hashOfConfig":"102"},{"size":3247,"mtime":1608103433954,"results":"131","hashOfConfig":"102"},{"size":1486,"mtime":1608361758364,"results":"132","hashOfConfig":"102"},{"size":1381,"mtime":1607488365677,"results":"133","hashOfConfig":"102"},{"size":686,"mtime":1607943100591,"results":"134","hashOfConfig":"102"},{"size":291,"mtime":1607209962400,"results":"135","hashOfConfig":"102"},{"size":1273,"mtime":1608105960366,"results":"136","hashOfConfig":"102"},{"size":1267,"mtime":1607313497445,"results":"137","hashOfConfig":"102"},{"size":721,"mtime":1607380103393,"results":"138","hashOfConfig":"102"},{"size":1457,"mtime":1608027649111,"results":"139","hashOfConfig":"102"},{"size":293,"mtime":1607460554784,"results":"140","hashOfConfig":"102"},{"size":2132,"mtime":1608019944152,"results":"141","hashOfConfig":"102"},{"size":1569,"mtime":1608019754368,"results":"142","hashOfConfig":"102"},{"size":465,"mtime":1607646324245,"results":"143","hashOfConfig":"102"},{"size":2836,"mtime":1605978191526,"results":"144","hashOfConfig":"102"},{"size":351,"mtime":1607627768096,"results":"145","hashOfConfig":"102"},{"size":2919,"mtime":1608110679721,"results":"146","hashOfConfig":"102"},{"size":3419,"mtime":1608109938630,"results":"147","hashOfConfig":"102"},{"size":1411,"mtime":1610046493257,"results":"148","hashOfConfig":"149"},{"size":3737,"mtime":1610066691981,"results":"150","hashOfConfig":"149"},{"size":2212,"mtime":1612531504107,"results":"151","hashOfConfig":"149"},{"size":5781,"mtime":1610412197048,"results":"152","hashOfConfig":"149"},{"size":739,"mtime":1610066748079,"results":"153","hashOfConfig":"149"},{"size":5350,"mtime":1611027120885,"results":"154","hashOfConfig":"149"},{"size":1657,"mtime":1610160248986,"results":"155","hashOfConfig":"149"},{"size":496,"mtime":1611127096000,"results":"156","hashOfConfig":"149"},{"size":948,"mtime":1611026270650,"results":"157","hashOfConfig":"149"},{"size":2550,"mtime":1611127120374,"results":"158","hashOfConfig":"149"},{"size":2352,"mtime":1608841904126,"results":"159","hashOfConfig":"149"},{"size":2090,"mtime":1612520331348,"results":"160","hashOfConfig":"149"},{"size":784,"mtime":1612962400702,"results":"161","hashOfConfig":"149"},{"size":705,"mtime":1610412358131,"results":"162","hashOfConfig":"149"},{"size":4172,"mtime":1612962400066,"results":"163","hashOfConfig":"149"},{"size":3396,"mtime":1610408019084,"results":"164","hashOfConfig":"149"},{"size":3638,"mtime":1608924805912,"results":"165","hashOfConfig":"149"},{"size":616,"mtime":1609011293700,"results":"166","hashOfConfig":"149"},{"size":285,"mtime":1612707590564,"results":"167","hashOfConfig":"149"},{"size":2004,"mtime":1613329164706,"results":"168","hashOfConfig":"149"},{"size":1881,"mtime":1609011486114,"results":"169","hashOfConfig":"149"},{"size":835,"mtime":1609101075243,"results":"170","hashOfConfig":"149"},{"size":3611,"mtime":1613331535018,"results":"171","hashOfConfig":"149"},{"size":386,"mtime":1613055230503,"results":"172","hashOfConfig":"149"},{"size":415,"mtime":1609460219117,"results":"173","hashOfConfig":"149"},{"size":1961,"mtime":1610394585777,"results":"174","hashOfConfig":"149"},{"size":284,"mtime":1609889285796,"results":"175","hashOfConfig":"149"},{"size":769,"mtime":1609889286513,"results":"176","hashOfConfig":"149"},{"size":1266,"mtime":1609889287485,"results":"177","hashOfConfig":"149"},{"size":1327,"mtime":1610044998484,"results":"178","hashOfConfig":"149"},{"size":990,"mtime":1611027337489,"results":"179","hashOfConfig":"149"},{"size":256,"mtime":1609889284389,"results":"180","hashOfConfig":"149"},{"size":318,"mtime":1610070236133,"results":"181","hashOfConfig":"149"},{"size":4808,"mtime":1611126440824,"results":"182","hashOfConfig":"149"},{"size":398,"mtime":1610296481763,"results":"183","hashOfConfig":"149"},{"size":372,"mtime":1610297495384,"results":"184","hashOfConfig":"149"},{"size":3175,"mtime":1612707589960,"results":"185","hashOfConfig":"149"},{"size":974,"mtime":1610297107968,"results":"186","hashOfConfig":"149"},{"size":1813,"mtime":1610388626763,"results":"187","hashOfConfig":"149"},{"size":553,"mtime":1610297568307,"results":"188","hashOfConfig":"149"},{"size":2818,"mtime":1610413361345,"results":"189","hashOfConfig":"149"},{"size":1055,"mtime":1610415394060,"results":"190","hashOfConfig":"149"},{"size":1877,"mtime":1612522606524,"results":"191","hashOfConfig":"149"},{"size":209,"mtime":1610502127652,"results":"192","hashOfConfig":"149"},{"size":239,"mtime":1610501237947,"results":"193","hashOfConfig":"149"},{"size":219,"mtime":1610501206914,"results":"194","hashOfConfig":"149"},{"size":568,"mtime":1610501201059,"results":"195","hashOfConfig":"149"},{"size":969,"mtime":1610501355269,"results":"196","hashOfConfig":"149"},{"size":1773,"mtime":1611120467924,"results":"197","hashOfConfig":"149"},{"size":582,"mtime":1611129344683,"results":"198","hashOfConfig":"149"},{"size":222,"mtime":1611133185650,"results":"199","hashOfConfig":"149"},{"size":382,"mtime":1611211353054,"results":"200","hashOfConfig":"149"},{"size":259,"mtime":1612523974801,"results":"201","hashOfConfig":"149"},{"size":420,"mtime":1613054656429,"results":"202","hashOfConfig":"149"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f4lb3m",{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"268"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},"cse3ot",{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"299"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"299"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"299"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"299"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"299"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"299"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"299"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"299"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"299"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"299"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"299"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"299"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"299"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"299"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"299"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"299"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"299"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"299"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"299"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"299"},"D:\\WEB\\GitHub\\my_social_network\\src\\index.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\App.js",["425","426","427"],"D:\\WEB\\GitHub\\my_social_network\\src\\reportWebVitals.js",[],["428","429"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\redux-store.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\profile-reducer.js",["430"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\dialogs-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\users-reducer.js",["431"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\nav-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\auth-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Login\\Login.jsx",["432","433","434"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\News\\News.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Settings\\Settings.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\UsersContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\NavContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileContainer.jsx",["435","436"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\HeaderContainer.jsx",["437","438"],"D:\\WEB\\GitHub\\my_social_network\\src\\api\\api.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withAuthRedirect.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Dialogs.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\Users.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Nav.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Header\\Header.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\Profile.jsx",["439"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Preloader\\Preloader.jsx",["440"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\Message\\Message.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["441"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Nav\\Friends\\NavFriends.jsx",["442"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["443"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",[],["444","445"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\Validators\\Validaors.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\FormsControls\\FormsControls.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\app-reducer.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\selectors\\user-selectors.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Utils\\objects-helpers.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\Paginator\\Paginator.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Users\\User\\User.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Common\\UserPhoto\\UserPhoto.jsx",["446"],"D:\\WEB\\GitHub\\my_social_network\\src\\redux\\store.js",[],"D:\\WEB\\GitHub\\my_social_network\\src\\Hoc\\withSuspense.js",["447"],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.jsx",[],"D:\\WEB\\GitHub\\my_social_network\\src\\components\\Profile\\ProfileInfo\\ProfileData.jsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\app-reducer.ts",[],["448","449"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\auth-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\dialogs-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\profile-reducer.ts",["450"],"import { stopSubmit, FormAction } from 'redux-form';\nimport { PhotosType, postDataType, ProfileType } from '../types/types';\nimport { profileAPI } from './../api/profileAPI';\nimport { BaseThunkType, InferActionTypes } from './redux-store';\n\nexport type InitialStateType = typeof initialState\nexport type ActionTypes = InferActionTypes<typeof profileReducerActions>\ntype ThunkType = BaseThunkType<ActionTypes | FormAction>\n\nlet initialState = {\n    postsData: [\n        { id: 1, likes: 121, message: 'Hallow it\\'s my first post. ' },\n        { id: 2, likes: 231, message: 'Here should be second post but i\\'v got no idea.' },\n        { id: 3, likes: 321, message: 'For third post i\\'v still have no idea. I guess twitter in not for me.' }\n    ] as Array<postDataType>,\n    profile: null as ProfileType | null,\n    status: ' ' as string,\n    isValidInput: false as boolean,\n    isAuth: false as boolean\n};\n\nconst profileReducer = (state = initialState, action: ActionTypes): InitialStateType => {\n    switch (action.type) {\n\n        case 'ADD_POST':\n            let newPost = {\n                id: 5,\n                message: action.newTextBody,\n                likes: 0\n            };\n            return {\n                ...state,\n                postsData: [...state.postsData, newPost],\n            };\n        case 'SET_USER_PROFILE':\n            return {\n                ...state,\n                profile: action.profile\n            };\n\n        case 'SET_STATUS':\n            return {\n                ...state,\n                status: action.status\n            }\n        case 'DELETE_POST':\n            return {\n                ...state,\n                postsData: state.postsData.filter(p => p.id != action.postId)\n            }\n        case 'SAVE_PHOTO_SUCCESS':\n            return {\n                ...state,\n                profile: {\n                    ...state.profile,\n                    photos: action.photos\n                } as ProfileType\n                // временное решение\n            }\n        case 'SET_IS_VALID_INPUT':\n            return {\n                ...state,\n                isValidInput: action.isValid\n            }\n\n\n        default:\n            return state;\n\n    };\n\n};\n// action creators\n\n\n\nexport const profileReducerActions = {\n    deletePostAC: (postId: number) => ({ type: 'DELETE_POST', postId } as const),\n    addNewPostAC: (newTextBody: string) => ({ type: 'ADD_POST', newTextBody } as const),\n    setUserProfile: (profile: ProfileType | null) => ({ type: 'SET_USER_PROFILE', profile } as const),\n    setStatus: (status: string) => ({ type: 'SET_STATUS', status } as const),\n    savaPhotoSuccess: (photos: PhotosType) => ({ type: 'SAVE_PHOTO_SUCCESS', photos } as const),\n    setIsValidInput: (isValid: boolean) => ({ type: 'SET_IS_VALID_INPUT', isValid } as const)\n}\n/// thunks\n\n\nexport const getProfileDataThunk = (userId: number | null): ThunkType => async (dispatch) => {\n    if (userId !== null) {\n        let data = await profileAPI.getProfileData(userId)\n        dispatch(profileReducerActions.setUserProfile(data));\n    }\n}\n\nexport const getStatusThunk = (userId: number | null): ThunkType => async (dispatch) => {\n    if (userId !== null) {\n        let data = await profileAPI.getStatus(userId)\n        dispatch(profileReducerActions.setStatus(data));\n    }\n}\n//по окончанию асинхронной операции мы пытаемся выполнить try, если пришла ошибка -\n// - мы перехватываем её catch и что то с ней делаем, в ней есть message. код шибки(500/404 и тд.)\n// это локальный обработчик ошибок в противовес глоаблному в app.js\nexport const updateStatusThunk = (status: string): ThunkType => async (dispatch) => {\n    try {\n        let data = await profileAPI.updateStatus(status)\n        if (data.resultCode === 0) {\n            dispatch(profileReducerActions.setStatus(status));\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const savePhotoThunk = (file: File): ThunkType => async (dispatch) => {\n    let data = await profileAPI.putNewPhoto(file)\n    if (data.resultCode === 0) {\n        dispatch(profileReducerActions.savaPhotoSuccess(data.data.photos));\n    }\n}\n\nexport const saveProfileThunk = (profile: ProfileType | null): ThunkType => async (dispatch, getState) => {\n    if (profile !== null) {\n        let userId = getState().auth.userId\n        let data = await profileAPI.saveProfile(profile)\n        if (data.resultCode === 0) {\n            if (userId !== null) {\n                dispatch(getProfileDataThunk(userId))\n            } else {\n                throw new Error('userId cant be null')\n            }\n            dispatch(profileReducerActions.setIsValidInput(true))\n        } else {\n            dispatch(profileReducerActions.setIsValidInput(false))\n            let wrongNetwork = data.messages[0].slice(\n                data.messages[0].indexOf(\">\") + 1,\n                data.messages[0].indexOf(\")\")\n            )\n                .toLocaleLowerCase();\n            dispatch(\n                stopSubmit(\"edit-profile\", {\n                    contacts: { [wrongNetwork]: data.messages[0] }\n                })\n            );\n            return Promise.reject(data.messages[0]);\n\n            // как сделать чтобы все сообщения сразу подсветились? \n        }\n    }\n}\n\n\n\nexport default profileReducer;\n\n// let key = data.messages[0].match(/Contacts->(\\w+)/)[1].toLowerCase();\n// dispatch(stopSubmit('edit-profile', {\n//     contacts: { [key]: data.messages[0] },\n// })); тоже самое что и выше в else только с регулярным выражением. ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\nav-reducer.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\users-reducer.ts",["451"],"import { userAPI } from \"../api/userAPI\";\nimport { UsersType } from '../types/types';\nimport { updateObjectInArray } from '../Utils/objects-helpers';\nimport { BaseThunkType, InferActionTypes } from './redux-store';\nimport { FormAction } from 'redux-form';\nimport { Dispatch } from \"react\";\nimport { PostPutDeleteRegularResponse } from \"../types/apiTypes\";\n\nexport type InitialStateType = typeof inilialState\nexport type FilterType = typeof inilialState.filter\nexport type ActionTypes = InferActionTypes<typeof UsersReducerActions>\ntype ThunkType = BaseThunkType<ActionTypes | FormAction>\ntype DispatchType = Dispatch<ActionTypes>\n\nlet inilialState = {\n    usersData: [] as Array<UsersType>,\n    pageSize: 10 as number,\n    totalUsersCount: 0 as number,\n    currentPage: 1 as number,\n    isFetching: true as boolean,\n    followingInProgress: [] as Array<number>, //array of usersId\n    filter: {\n        term: '',\n        friend: null as null | boolean\n    }\n}\n\nconst usersReducer = (state = inilialState, action: ActionTypes): InitialStateType => {\n\n    switch (action.type) {\n\n        case 'usersReduser/FOLLOW':\n            return {\n                ...state,\n                usersData: updateObjectInArray(state.usersData, action.userId, 'id', { followed: true })\n            }\n        case 'usersReduser/UNFOLLOW':\n            return {\n                ...state,\n                usersData: updateObjectInArray(state.usersData, action.userId, 'id', { followed: false })\n            }\n        case 'usersReduser/SET_USERS': {\n            return {\n                ...state,\n                usersData: [...action.users]\n            }\n        }\n        case 'usersReduser/SET_CURRENT_PAGE': {\n            return {\n                ...state,\n                currentPage: action.page\n            }\n        }\n        case 'usersReduser/SET_TOTAL_USERS_COUNT': {\n            return {\n                ...state,\n                totalUsersCount: action.totalCount\n            }\n        }\n        case 'usersReduser/TOGGLE_IS_FETCHING': {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case 'usersReduser/TOGGLE_IS_FOLLOWING_PROGRESS': {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        case 'usersReduser/SET_FILTER': {\n            return {\n                ...state, filter: action.payload\n            }\n        }\n        default:\n            return state;\n    }\n};\n\nexport const UsersReducerActions = {\n    follow: (userId: number) => ({ type: 'usersReduser/FOLLOW', userId } as const),\n    unFollow: (userId: number) => ({ type: 'usersReduser/UNFOLLOW', userId } as const),\n    setUsers: (users: Array<UsersType>) => ({ type: 'usersReduser/SET_USERS', users } as const),\n    showMore: () => ({ type: 'usersReduser/SHOWMORE' } as const),\n    setCurrentPage: (page: number) => ({ type: 'usersReduser/SET_CURRENT_PAGE', page } as const),\n    setTotalUsersCount: (totalCount: number) => ({ type: 'usersReduser/SET_TOTAL_USERS_COUNT', totalCount } as const),\n    setToggleFetching: (isFetching: boolean) => ({ type: 'usersReduser/TOGGLE_IS_FETCHING', isFetching } as const),\n    toggleFollowingIsFetching: (isFetching: boolean, userId: number) => ({ type: 'usersReduser/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId } as const),\n    setFilter: (filter: FilterType) => ({ type: 'usersReduser/SET_FILTER', payload: filter } as const)\n}\n\n// functions + thunks \n\nexport const getUsersThunk = (currentPage: number, pageSize: number, filter: FilterType): ThunkType => async (dispatch) => {\n    dispatch(UsersReducerActions.setToggleFetching(true));\n    dispatch(UsersReducerActions.setFilter(filter))\n    let data = await userAPI.getUsers(currentPage, pageSize, filter.term, filter.friend)\n    dispatch(UsersReducerActions.setToggleFetching(false));\n    dispatch(UsersReducerActions.setUsers(data.items));\n    dispatch(UsersReducerActions.setTotalUsersCount(data.totalCount));\n}\n\nconst followUnfollowFlow = async (\n    dispatch: DispatchType,\n    userId: number,\n    apiMethod: (userId: number) => Promise<PostPutDeleteRegularResponse>,\n    actionCreator: (userId: number) => ActionTypes\n) => {\n    dispatch(UsersReducerActions.toggleFollowingIsFetching(true, userId))\n    let data = await apiMethod(userId)\n    if (data.resultCode === 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(UsersReducerActions.toggleFollowingIsFetching(false, userId));\n}\nexport const followThunk = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        await followUnfollowFlow(dispatch, userId, userAPI.followUser.bind(userAPI), UsersReducerActions.follow);\n    }\n}\nexport const unfollowThunk = (userId: number): ThunkType => {\n    return async (dispatch) => {\n        await followUnfollowFlow(dispatch, userId, userAPI.unfollowUser.bind(userAPI), UsersReducerActions.unFollow);\n    }\n}\n// для обхода типизации в usersContainer \nexport const setCurrentPageThunk = (page: number): BaseThunkType<ActionTypes, void> => (dispatch) => {\n    dispatch(UsersReducerActions.setCurrentPage(page))\n}\n\n\nexport default usersReducer;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\redux-store.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\UsersContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\user-selectors.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\Users.tsx",["452"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FilterType, followThunk, setCurrentPageThunk } from '../../redux/users-reducer';\r\nimport Paginator from '../Common/Paginator/Paginator';\r\nimport User from './User/User';\r\nimport s from './Users.module.css'\r\nimport { UsersSearchForm } from './usersSearchForm';\r\nimport { getcurrentPage, getPageSize, getTotalUsersCount, getUsers, getFollowingInProgress, getUsersFilter } from './../../redux/selectors/user-selectors';\r\nimport { getUsersThunk, unfollowThunk } from './../../redux/users-reducer';\r\n\r\n\r\ntype PropsType = {\r\n}\r\n\r\nlet Users: React.FC<PropsType> = (props) => {\r\n\r\n    const usersData = useSelector(getUsers)\r\n    const pageSize = useSelector(getPageSize)\r\n    const totalItemsCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getcurrentPage)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(setCurrentPageThunk(pageNumber))\r\n        dispatch(getUsersThunk(pageNumber, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(getUsersThunk(1, pageSize, filter))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(followThunk(userId))\r\n    }\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unfollowThunk(userId))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsersThunk(currentPage, pageSize, filter))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={s.usersWrapper}>\r\n            <div>\r\n                <UsersSearchForm onFilterChanged={onFilterChanged} />\r\n            </div>\r\n            <div className={s.paginatorDiv}>\r\n                <Paginator\r\n                    onPageChanged={onPageChanged}\r\n                    currentPage={currentPage}\r\n                    totalItemsCount={totalItemsCount}\r\n                    pageSize={pageSize}\r\n                />\r\n            </div>\r\n            <div className={s.usersDiv}>\r\n                {usersData.map((u) =>\r\n                    <User\r\n                        key={u.id}\r\n                        user={u}\r\n                        followingInProgress={followingInProgress}\r\n                        followThunk={follow}\r\n                        unfollowThunk={unfollow}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Paginator\\Paginator.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileContainer.tsx",["453","454","455"],"import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { getAutorisedUserId } from './../../redux/selectors/profile-selectors';\r\nimport { getStatusThunk, getProfileDataThunk } from './../../redux/profile-reducer';\r\nimport { usePrevious } from './../Hooks/usePreviouse';\r\nimport Preloader from './../Common/Preloader/Preloader';\r\n\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype RoutePropsType = RouteComponentProps<PathParamsType>\r\ntype PropsType = RoutePropsType\r\n\r\n\r\n// + преобразование \r\nconst ProfilePage: React.FC<PropsType> = React.memo((props) => {\r\n    const dispatch = useDispatch()\r\n    const getStatus = (userId: number | null) => {\r\n        dispatch(getStatusThunk(userId))\r\n    }\r\n    const getProfileData = (userId: number | null) => {\r\n        dispatch(getProfileDataThunk(userId))\r\n    }\r\n    const autorisedUserId = useSelector(getAutorisedUserId)\r\n\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [])\r\n\r\n    const prevMatch: any = usePrevious(props.match)\r\n    useEffect(() => {\r\n        if (props.match.params.userId != prevMatch?.params.userId) {\r\n            refreshProfile()\r\n        }\r\n    })\r\n\r\n\r\n    let refreshProfile = () => {\r\n        let userId: number | null = +props.match.params.userId;\r\n        if (!userId) {\r\n            userId = autorisedUserId;\r\n            if (!userId) {\r\n                props.history.push('/Login')\r\n                // push history в любом месте кода берёт и меняет URL. условной альтернативой может быть redirect\r\n            }\r\n        }\r\n        getProfileData(userId);\r\n        getStatus(userId);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Profile\r\n                isOwner={!props.match.params.userId} />\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfilePage)","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\Profile.tsx",["456","457","458"],"import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport { useSelector } from 'react-redux';\r\nimport { getProfile, getIsAuth, getIsValidInput } from './../../redux/selectors/profile-selectors';\r\n\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = ({ isOwner }) => {\r\n    const profile = useSelector(getProfile)\r\n    const isAuth = useSelector(getIsAuth)\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                isOwner={isOwner}\r\n                profile={profile}\r\n            />\r\n            {isOwner && <MyPostsContainer profile={profile} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["459","460"],"import { connect } from 'react-redux';\r\nimport { profileReducerActions } from '../../../redux/profile-reducer';\r\nimport MyPosts, { MapDispatchPostsType, MapPropsType } from './MyPosts';\r\nimport { reset } from 'redux-form';\r\nimport { postDataType, ProfileType } from '../../../types/types';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapPropsType, MapDispatchPostsType, {}, AppStateType>(mapStateToProps, {\r\n    addPost: profileReducerActions.addNewPostAC, resetForm: reset\r\n})(MyPosts);\r\n\r\nexport default MyPostsContainer; ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["461"],"import React, { useState, useEffect, ChangeEvent } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport { isUserImgLarge } from '../../Common/UserPhoto/UserPhoto';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ProfileData from './ProfileData'\r\nimport { ProfileType } from '../../../types/types';\r\nimport { savePhotoThunk, profileReducerActions, saveProfileThunk } from './../../../redux/profile-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getIsValidInput } from './../../../redux/selectors/profile-selectors';\r\n\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    isOwner: boolean\r\n}\r\n\r\n\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({\r\n    profile, isOwner,  }) => {\r\n\r\n    const isValidInput = useSelector(getIsValidInput)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const setIsValidInput = (isValid: boolean) => {\r\n        dispatch(profileReducerActions.setIsValidInput(isValid))\r\n    }\r\n    const savePhoto = (file: any) => {\r\n        dispatch(savePhotoThunk(file))\r\n    }\r\n    const saveProfile = (profile: ProfileType | null) => {\r\n        dispatch(saveProfileThunk(profile))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        isValidInput && setEditMode(false);\r\n        setIsValidInput(false)\r\n    })\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    // e.target.files?.length - если files не null то берём длинну и выполняем тело. (вопросительный знак!!!)\r\n    // такая же запись по старому if (e.target.files && e.target.files.length)\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData: ProfileType) => {\r\n        saveProfile(formData);\r\n        // isValidInput && setEditMode(false);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div className={s.descriptionBlock}>\r\n                <div className={s.imageBlock} >\r\n                    {/* img */}\r\n                    <div className={s.innetImageBlock}>\r\n                        <img className={s.userPhoto}\r\n                            src={isUserImgLarge(profile)} alt=\"profilePhoto\" />\r\n                        <div className={s.onImgButtons}>\r\n                            <div className={s.changePhotoBtn}>\r\n                                {/* changePhoto button */}\r\n                                {isOwner && <input id='upload' type={'file'} title=' ' onChange={onMainPhotoSelected} />}\r\n                                <label htmlFor='upload'>Change photo</label>\r\n                            </div>\r\n                            <div>\r\n                                {/* eddit button */}\r\n                                {isOwner &&\r\n                                    <div className={s.editButton}>\r\n                                        <button onClick={() => { setEditMode(true) }}>Edit info</button>\r\n                                    </div>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={s.infoBlock}>\r\n                    {/* status */}\r\n                    <div>\r\n                        <ProfileStatusWithHooks />\r\n                    </div>\r\n                    <div>\r\n                        {editMode\r\n                            ? <ProfileDataForm\r\n                                profile={profile}\r\n                                initialValues={profile}\r\n                                onSubmit={onSubmit}\r\n                            />\r\n                            : <ProfileData\r\n                                profile={profile}\r\n                            // isOwner={isOwner}\r\n                            />}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default ProfileInfo;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileData.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\NavContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\Header.tsx",["462","463"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Nav.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Message\\Message.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Login\\Login.tsx",["464","465","466","467","468"],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Header\\HeaderContainer.tsx",["469"],"import React from 'react';\r\nimport Header from './Header';\r\nimport { withAuthRedirect } from '../../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    // withAuthRedirect\r\n)(HeaderContainer)\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\Validators\\Validaors.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\FormsControls\\FormsControls.tsx",["470"],"import React, { FC } from 'react'\r\nimport s from './FormsControls.module.css'\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from 'redux-form'\r\nimport { FieldValidatorType } from '../../../Utils/Validators/Validaors'\r\n\r\n// из прорсов удалил input, \r\n\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n}\r\n\r\nexport function createField<FormKeysType extends string>(\r\n    validate: Array<FieldValidatorType>,\r\n    placeholder: string | undefined,\r\n    component: React.FC<WrappedFieldProps> | \"input\" | \"select\" | \"textarea\" | undefined,\r\n    name: FormKeysType,\r\n    type: string,\r\n    rows?: string\r\n) {\r\n    return (\r\n        <div>\r\n            <Field\r\n                validate={validate}\r\n                placeholder={placeholder}\r\n                component={component}\r\n                name={name}\r\n                type={type}\r\n                rows={rows}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({ meta: { touched, error }, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <div className={s.formErrorDiv}>{error}</div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n\r\n    // const { input, meta, child, ...restProps } = props\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}><textarea className={s.textarea} {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n\r\n    // const { input, meta, child, ...restProps } = props\r\n    const { input, meta, ...restProps } = props\r\n    return (\r\n        <FormControl {...props}><input className={s.input} {...input} {...restProps} /></FormControl>\r\n    )\r\n}\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\securityAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\authAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\profileAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\types\\apiTypes.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\userAPI.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\api\\api.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Utils\\objects-helpers.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\App.tsx",["471"],"import React, { Component } from 'react';\nimport './App.css';\nimport Settings from './components/Settings/Settings';\nimport { Route, withRouter, BrowserRouter, Redirect, Switch, HashRouter } from 'react-router-dom';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport NavContainer from './components/Nav/NavContainer';\nimport {UsersPage} from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport { connect, Provider } from 'react-redux';\nimport Preloader from './components/Common/Preloader/Preloader';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport store, { AppStateType } from './redux/redux-store';\nimport { withSuspense } from './Hoc/withSuspense';\n\nconst News = React.lazy(() => import('./components/News/News'))\nconst Login = React.lazy(() => import('./Login/Login'))\n\ntype MapPropsType = ReturnType<typeof mapStateToProps>\ntype DispatchPropsType = {\n  initializeApp: () => void\n}\n\nconst SuspendedProfile = withSuspense(ProfileContainer) \nconst SuspendedDialogs = withSuspense(DialogsContainer)\n\nclass App extends Component<MapPropsType & DispatchPropsType> {\n  //тут мы можем задиспатчить санку на отображение глобальной ошибки.\n  catchAllUnhandledError = (e: PromiseRejectionEvent) => {\n    console.log('some error.');\n  }\n  //метод жизненного цикла, который выполнится после вмонтирования компоненты \n  // window.addEventListener - садй эффект но в comp.DidMount допустим. \n  // это глобальный обработчик ошибок в противовес локальному в редюссоре\n  // если в редюсоре перехвачена ошибка - тут её не будет.\n  componentDidMount() {\n    this.props.initializeApp()\n    window.addEventListener('unhandledrejection', this.catchAllUnhandledError);\n  }\n  // подчистил мусор. при умирании компоненты нужно отписать слушателя.\n  componentWillUnmount() {\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandledError);\n  }\n\n  render() {\n    //пока не инициализированы(все данные в редюсор не пришли) - прелоадер. \n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    //exact для отображения точный совпадений url. если /login/???? то не отобразит. \n    // swtich from react-render-dom. идёт по списку роутов до момента совпадения url. схоже с exact\n    return (\n      <div className=\"app-wrapper\">\n\n        <HeaderContainer />\n        <NavContainer />\n        <div className='app-wrapper-content'>\n          <Switch>\n            <Route exact path='/' render={() => <Redirect to={'/Profile'} />} />\n            <Route path='/Profile/:userId?' render={() => <SuspendedProfile/>} />\n            <Route path='/Dialogs/:userId?' render={() => <SuspendedDialogs/>} />\n            {/* <Route path='/Profile/:userId?' render={() => <ProfileContainer />} />\n            <Route path='/Dialogs/:userId?' render={() => <DialogsContainer />} /> */}\n            <Route path='/Users' render={() => <UsersPage />} />\n            <Route path='/News' render={withSuspense(News)} />\n            <Route path='/Settings' render={() => <Settings />} />\n            <Route path='/Login' render={() => { return <React.Suspense fallback={<Preloader />}> <Login /> </React.Suspense> }} />\n            <Route exact path='*' render={() => <div>404 not found</div>} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized\n})\n\n// AppContainer результат функции compose.\n// compose один за одним выполняет хоки. \n// connect передаёт данные в компаненту через MSTP и MDTP\n// brouser router передаёт информацию о роутинге, url\n// provider передаёт store в контекст всех дочерних компанент \n// в контект уместо положить тема(тёмная,светлая), локализация(en/ru)\nlet AppContainer = compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJsApp: React.FC = () => {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>\n  )\n}\n\n\nexport default SamuraiJsApp; ","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withSuspense.tsx",["472"],"import React, { Suspense } from 'react';\r\nimport Preloader from '../components/Common/Preloader/Preloader';\r\n\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return (\r\n            <React.Suspense fallback={<Preloader />}>\r\n                <WrappedComponent {...props} />\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\Preloader\\Preloader.tsx",["473"],"import preloader from '../../../svg/Eclipse-1s-200px.svg';\r\nimport React from 'react';\r\nimport s from './Preloader.module.css';\r\n\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={s.ldsEllipsis}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Preloader;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\Dialogs.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\Hoc\\withAuthRedirect.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\User\\User.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Common\\UserPhoto\\UserPhoto.tsx",["474"],"import React from 'react';\r\nimport noUserPhoto from '../../../imagas/no-avatar.png'\r\nimport { ProfileType, UsersType } from '../../../types/types';\r\n\r\nexport const isUserImgSmall = (user: UsersType) => {\r\n    return user.photos.small !== null\r\n        ? user.photos.small\r\n        : noUserPhoto\r\n\r\n}\r\n\r\nexport const isUserImgLarge = (profile: ProfileType) => {\r\n    return profile.photos.large !== null\r\n        ? profile.photos.large\r\n        : profile.photos.small !== null\r\n            ? profile.photos.small\r\n            : noUserPhoto\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["475"],"import React from 'react';\r\nimport { postDataType, ProfileType } from '../../../../types/types';\r\nimport s from './Post.module.css';\r\n\r\ntype PostType = {\r\n    profile: ProfileType | null\r\n    likes: number\r\n    message: string\r\n}\r\n\r\n\r\n\r\nconst Post: React.FC<PostType> = (props) => {\r\n    if (!props.profile) {\r\n    } else {\r\n        var imgSrc = props.profile.photos.large\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={s.item}>\r\n            <div className={s.postInfo}>\r\n                <div>\r\n                    {/* <img className={s.itemImg} src={props.profile && props.profile.photos.large} alt=\"\" /> */}\r\n                    <img className={s.itemImg} src={imgSrc} alt=\"\" />\r\n                </div>\r\n                <div className={s.likes}>\r\n                    <span>{props.likes} likes</span>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={s.textInfo}>\r\n                <div>\r\n                    {props.message}\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\index.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Settings\\Settings.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\News\\News.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Nav\\Friends\\NavFriends.tsx",["476"],"import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './NavFriends.module.css';\r\n\r\ntype PropsType = {\r\n    name: string\r\n    imgSrc: string\r\n}\r\n\r\nconst NavFriends:React.FC<PropsType> = (props) => {\r\n    return (\r\n\r\n\r\n        <div className={s.navFriendsElement}>\r\n            <div className={s.navFriendsElementImageDiv}>\r\n                <img src={props.imgSrc} alt=\"avatar\" />\r\n            </div>\r\n            <div className={s.navFriendsElementName}>{props.name}</div>\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default NavFriends;\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["477"],"import React from 'react';\r\nimport s from './DialogItem.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PropsType = {\r\n    id: number\r\n    paramsUserId: number\r\n    imgSrc: string\r\n    name: string\r\n}\r\n\r\nconst DialogItem:React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n\r\n            <NavLink to={\"/Dialogs/\" + props.id}>\r\n                <div className=\r\n                    {props.paramsUserId == props.id ? s.active : s.noActive + ' ' + s.avaImg} >\r\n                    <img src={props.imgSrc} alt=\"avatar\" />\r\n                </div>\r\n                <div className={s.name}>\r\n                    {props.name}\r\n                </div>\r\n            </NavLink>\r\n\r\n            {/* jsx элемент принимает данные для отрисовки из props, которые туда попали из массива данных через .map */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Users\\usersSearchForm.tsx",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\profile-selectors.ts",["478"],"import { createSelector } from \"reselect\"\r\nimport { AppStateType } from \"../redux-store\"\r\n\r\n\r\nexport const getProfile = (state: AppStateType) => {\r\n    return state.profilePage.profile\r\n}\r\n\r\nexport const getStatus = (state: AppStateType) => {\r\n    return state.profilePage.status\r\n}\r\n\r\nexport const getAutorisedUserId = (state: AppStateType) => {\r\n    return state.auth.userId\r\n}\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getIsValidInput = (state: AppStateType) => {\r\n    return state.profilePage.isValidInput\r\n}\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\components\\Hooks\\usePreviouse.tsx",["479"],"import { useRef } from \"react\";\r\nimport React, {useEffect} from 'react';\r\n\r\nexport function usePrevious(value: any) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\login-selectors.ts",["480"],"import { createSelector } from \"reselect\"\r\nimport { AppStateType } from \"../redux-store\"\r\n\r\n\r\nexport const getIsAuth = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getCaptchaUrl = (state: AppStateType) => {\r\n    return state.auth.captchaUrl\r\n}\r\n\r\nexport const getInStateError = (state: AppStateType) => {\r\n    return state.auth.inStateError\r\n}\r\n\r\n\r\n\r\n","D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\dialogs-selectors.ts",[],"D:\\WEB\\GitHub\\mySocialNetworkWithTS\\src\\redux\\selectors\\header-selectors.ts",[],{"ruleId":"481","severity":1,"message":"482","line":1,"column":28,"nodeType":"483","messageId":"484","endLine":1,"endColumn":32},{"ruleId":"481","severity":1,"message":"485","line":1,"column":34,"nodeType":"483","messageId":"484","endLine":1,"endColumn":42},{"ruleId":"481","severity":1,"message":"486","line":4,"column":29,"nodeType":"483","messageId":"484","endLine":4,"endColumn":42},{"ruleId":"487","replacedBy":"488"},{"ruleId":"489","replacedBy":"490"},{"ruleId":"491","severity":1,"message":"492","line":52,"column":61,"nodeType":"493","messageId":"494","endLine":52,"endColumn":63},{"ruleId":"491","severity":1,"message":"492","line":72,"column":65,"nodeType":"493","messageId":"494","endLine":72,"endColumn":67},{"ruleId":"481","severity":1,"message":"495","line":2,"column":21,"nodeType":"483","messageId":"484","endLine":2,"endColumn":27},{"ruleId":"496","severity":1,"message":"497","line":32,"column":31,"nodeType":"498","messageId":"499","endLine":32,"endColumn":33},{"ruleId":"496","severity":1,"message":"497","line":32,"column":45,"nodeType":"498","messageId":"499","endLine":32,"endColumn":47},{"ruleId":"481","severity":1,"message":"500","line":6,"column":10,"nodeType":"483","messageId":"484","endLine":6,"endColumn":26},{"ruleId":"491","severity":1,"message":"492","line":30,"column":44,"nodeType":"493","messageId":"494","endLine":30,"endColumn":46},{"ruleId":"481","severity":1,"message":"500","line":5,"column":10,"nodeType":"483","messageId":"484","endLine":5,"endColumn":26},{"ruleId":"481","severity":1,"message":"501","line":7,"column":10,"nodeType":"483","messageId":"484","endLine":7,"endColumn":18},{"ruleId":"481","severity":1,"message":"502","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":9},{"ruleId":"481","severity":1,"message":"503","line":1,"column":8,"nodeType":"483","messageId":"484","endLine":1,"endColumn":17},{"ruleId":"491","severity":1,"message":"504","line":12,"column":41,"nodeType":"493","messageId":"494","endLine":12,"endColumn":43},{"ruleId":"481","severity":1,"message":"505","line":2,"column":10,"nodeType":"483","messageId":"484","endLine":2,"endColumn":17},{"ruleId":"506","severity":1,"message":"507","line":13,"column":5,"nodeType":"483","endLine":13,"endColumn":14,"suggestions":"508"},{"ruleId":"487","replacedBy":"509"},{"ruleId":"489","replacedBy":"510"},{"ruleId":"481","severity":1,"message":"511","line":1,"column":8,"nodeType":"483","messageId":"484","endLine":1,"endColumn":13},{"ruleId":"481","severity":1,"message":"485","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":25},{"ruleId":"487","replacedBy":"512"},{"ruleId":"489","replacedBy":"513"},{"ruleId":"491","severity":1,"message":"492","line":49,"column":61,"nodeType":"493","messageId":"494","endLine":49,"endColumn":63},{"ruleId":"491","severity":1,"message":"492","line":71,"column":65,"nodeType":"493","messageId":"494","endLine":71,"endColumn":67},{"ruleId":"506","severity":1,"message":"514","line":42,"column":8,"nodeType":"515","endLine":42,"endColumn":10,"suggestions":"516"},{"ruleId":"517","severity":1,"message":"518","line":9,"column":8,"nodeType":"483","messageId":"484","endLine":9,"endColumn":17},{"ruleId":"506","severity":1,"message":"519","line":32,"column":8,"nodeType":"515","endLine":32,"endColumn":10,"suggestions":"520"},{"ruleId":"491","severity":1,"message":"492","line":36,"column":39,"nodeType":"493","messageId":"494","endLine":36,"endColumn":41},{"ruleId":"517","severity":1,"message":"502","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":9},{"ruleId":"517","severity":1,"message":"521","line":6,"column":33,"nodeType":"483","messageId":"484","endLine":6,"endColumn":48},{"ruleId":"517","severity":1,"message":"522","line":15,"column":11,"nodeType":"483","messageId":"484","endLine":15,"endColumn":17},{"ruleId":"517","severity":1,"message":"523","line":5,"column":10,"nodeType":"483","messageId":"484","endLine":5,"endColumn":22},{"ruleId":"517","severity":1,"message":"524","line":5,"column":24,"nodeType":"483","messageId":"484","endLine":5,"endColumn":35},{"ruleId":"506","severity":1,"message":"507","line":39,"column":5,"nodeType":"483","endLine":39,"endColumn":14,"suggestions":"525"},{"ruleId":"517","severity":1,"message":"526","line":18,"column":9,"nodeType":"483","messageId":"484","endLine":18,"endColumn":15},{"ruleId":"517","severity":1,"message":"527","line":31,"column":13,"nodeType":"483","messageId":"484","endLine":31,"endColumn":21},{"ruleId":"517","severity":1,"message":"495","line":2,"column":40,"nodeType":"483","messageId":"484","endLine":2,"endColumn":46},{"ruleId":"517","severity":1,"message":"528","line":6,"column":10,"nodeType":"483","messageId":"484","endLine":6,"endColumn":17},{"ruleId":"517","severity":1,"message":"529","line":10,"column":10,"nodeType":"483","messageId":"484","endLine":10,"endColumn":22},{"ruleId":"496","severity":1,"message":"497","line":49,"column":31,"nodeType":"498","messageId":"499","endLine":49,"endColumn":33},{"ruleId":"496","severity":1,"message":"497","line":49,"column":45,"nodeType":"498","messageId":"499","endLine":49,"endColumn":47},{"ruleId":"517","severity":1,"message":"500","line":3,"column":10,"nodeType":"483","messageId":"484","endLine":3,"endColumn":26},{"ruleId":"517","severity":1,"message":"530","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":19},{"ruleId":"517","severity":1,"message":"486","line":4,"column":29,"nodeType":"483","messageId":"484","endLine":4,"endColumn":42},{"ruleId":"517","severity":1,"message":"485","line":1,"column":17,"nodeType":"483","messageId":"484","endLine":1,"endColumn":25},{"ruleId":"517","severity":1,"message":"503","line":1,"column":8,"nodeType":"483","messageId":"484","endLine":1,"endColumn":17},{"ruleId":"517","severity":1,"message":"511","line":1,"column":8,"nodeType":"483","messageId":"484","endLine":1,"endColumn":13},{"ruleId":"517","severity":1,"message":"523","line":2,"column":10,"nodeType":"483","messageId":"484","endLine":2,"endColumn":22},{"ruleId":"517","severity":1,"message":"505","line":2,"column":10,"nodeType":"483","messageId":"484","endLine":2,"endColumn":17},{"ruleId":"491","severity":1,"message":"504","line":18,"column":41,"nodeType":"493","messageId":"494","endLine":18,"endColumn":43},{"ruleId":"517","severity":1,"message":"531","line":1,"column":10,"nodeType":"483","messageId":"484","endLine":1,"endColumn":24},{"ruleId":"517","severity":1,"message":"511","line":2,"column":8,"nodeType":"483","messageId":"484","endLine":2,"endColumn":13},{"ruleId":"517","severity":1,"message":"531","line":1,"column":10,"nodeType":"483","messageId":"484","endLine":1,"endColumn":24},"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'BrowserRouter' is defined but never used.","no-native-reassign",["532"],"no-negated-in-lhs",["533"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'submit' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'withAuthRedirect' is defined but never used.","'Redirect' is defined but never used.","'s' is defined but never used.","'preloader' is defined but never used.","Expected '===' and instead saw '=='.","'NavLink' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setEditMode'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isValidInput, setIsValidInput] as a second argument to the useEffect Hook.",["534"],["532"],["533"],"'React' is defined but never used.",["532"],["533"],"React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["535"],"@typescript-eslint/no-unused-vars","'Preloader' is defined but never used.","React Hook useEffect has a missing dependency: 'refreshProfile'. Either include it or remove the dependency array.",["536"],"'getIsValidInput' is defined but never used.","'isAuth' is assigned a value but never used.","'postDataType' is defined but never used.","'ProfileType' is defined but never used.",["537"],"'userId' is assigned a value but never used.","'srcOfImg' is assigned a value but never used.","'connect' is defined but never used.","'AppStateType' is defined but never used.","'FC' is defined but never used.","'createSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"538","fix":"544"},"Add dependencies array: [isValidInput, setIsValidInput]",{"range":"545","text":"546"},"Update the dependencies array to be: [currentPage, dispatch, filter, pageSize]",{"range":"547","text":"548"},"Update the dependencies array to be: [refreshProfile]",{"range":"549","text":"550"},{"range":"551","text":"546"},[642,642],", [isValidInput, setIsValidInput]",[1611,1613],"[currentPage, dispatch, filter, pageSize]",[1121,1123],"[refreshProfile]",[1387,1387]]